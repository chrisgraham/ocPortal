<?php /*

 ocPortal
 Copyright (c) ocProducts, 2004-2012

 See text/EN/licence.txt for full licencing information.


 NOTE TO PROGRAMMERS:
   Do not edit this file. If you need to make changes, save your changed file to the appropriate *_custom folder
   **** If you ignore this advice, then your website upgrades (e.g. for bug fixes) will likely kill your changes ****

*/

/**
 * @license		http://opensource.org/licenses/cpal_1.0 Common Public Attribution License
 * @copyright	ocProducts Ltd
 * @package		syndication
 */

class Hook_addon_registry_syndication
{

	/**
	 * Get a list of file permissions to set
	 *
	 * @return array			File permissions to set
	 */
	function get_chmod_array()
	{
		return array();
	}

	/**
	 * Get the version of ocPortal this addon is for
	 *
	 * @return float			Version number
	 */
	function get_version()
	{
		return ocp_version_number();
	}

	/**
	 * Get the description of the addon
	 *
	 * @return string			Description of the addon
	 */
	function get_description()
	{
		return 'Syndicate RSS/Atom feeds of your content.';
	}

	/**
	 * Get a mapping of dependency types
	 *
	 * @return array			File permissions to set
	 */
	function get_dependencies()
	{
		return array(
			'requires'=>array('syndication_blocks'),
			'recommends'=>array(),
			'conflicts_with'=>array(),
			'previously_in_addon'=>array('core_syndication'),
		);
	}

	/**
	 * Get a list of files that belong to this addon
	 *
	 * @return array			List of files
	 */
	function get_file_list()
	{
		return array(

			'sources/hooks/systems/addon_registry/syndication.php',
			'ATOM_ENTRY.tpl',
			'ATOM_WRAPPER.tpl',
			'RSS_CLOUD.tpl',
			'RSS_ENTRY.tpl',
			'RSS_ENTRY_COMMENTS.tpl',
			'RSS_HEADER.tpl',
			'RSS_WRAPPER.tpl',
			'ATOM_XSLT.tpl',
			'RSS_ABBR.tpl',
			'RSS_XSLT.tpl',
			'OPML_WRAPPER.tpl',
			'OPML_XSLT.tpl',
			'backend.php',
			'backend_cloud.php',
			'sources/rss2.php',
			'sources/hooks/systems/rss/.htaccess',
			'sources/hooks/systems/rss/index.html',
			'sources/hooks/systems/non_active_urls/news_rss_cloud.php',
		);
	}


	/**
	* Get mapping between template names and the method of this class that can render a preview of them
	*
	* @return array			The mapping
	*/
	function tpl_previews()
	{
		return array(
				'RSS_ENTRY_COMMENTS.tpl'=>'rss_wrapper',
				'RSS_XSLT.tpl'=>'rss_xslt',
				'ATOM_XSLT.tpl'=>'atom_xslt',
				'OPML_XSLT.tpl'=>'opml_xslt',
				'OPML_WRAPPER.tpl'=>'opml_wrapper',
				'RSS_CLOUD.tpl'=>'rss_wrapper',
				'RSS_HEADER.tpl'=>'rss_header',
				'ATOM_ENTRY.tpl'=>'atom_wrapper',
				'ATOM_WRAPPER.tpl'=>'atom_wrapper',
				'RSS_WRAPPER.tpl'=>'rss_wrapper',
				'RSS_ENTRY.tpl'=>'rss_wrapper',
				'RSS_ABBR.tpl'=>'rss_wrapper',
		);
	}

	/**
	 * Get a preview(s) of a (group of) template(s), as a full standalone piece of HTML in Tempcode format.
	 * Uses sources/lorem.php functions to place appropriate stock-text. Should not hard-code things, as the code is intended to be declaritive.
	 * Assumptions: You can assume all Lang/CSS/Javascript files in this addon have been pre-required.
	 *
	 * @return array			Array of previews, each is Tempcode. Normally we have just one preview, but occasionally it is good to test templates are flexible (e.g. if they use IF_EMPTY, we can test with and without blank data).
	 */
	function tpl_preview__rss_wrapper()
	{
		$comments=do_lorem_template('RSS_ENTRY_COMMENTS',array('COMMENT_URL'=>placeholder_url(),'ID'=>placeholder_id()));

		$content=do_lorem_template('RSS_ABBR',array(
		));
		$content->attach(do_lorem_template('RSS_ENTRY',array(
			'TITLE'=>lorem_phrase(),
			'SUMMARY'=>lorem_paragraph(),
			'VIEW_URL'=>placeholder_url(),
			'AUTHOR'=>lorem_word(),
			'CATEGORY'=>lorem_word(),
			'IF_COMMENTS'=>$comments,
			'DATE'=>placeholder_date(),
		)));

		$cloud=do_lorem_template('RSS_CLOUD',array(
			'TYPE'=>'news',
			'PORT'=>'80',
			'LOCAL_BASE_URL'=>placeholder_url(),
		));

		return array(
			lorem_globalise(
				do_lorem_template('RSS_WRAPPER',array(
					'MODE'=>'rss',
					'MODE_NICE'=>lorem_word(),
					'COPYRIGHT'=>lorem_phrase(),
					'ABOUT'=>lorem_paragraph(),
					'RSS_CLOUD'=>$cloud,
					'LOGO_URL'=>placeholder_image_url(),
					'DATE'=>placeholder_date(),
					'CONTENT'=>$content,
				)
			),NULL,'',true),
		);
	}


	/**
	 * Get a preview(s) of a (group of) template(s), as a full standalone piece of HTML in Tempcode format.
	 * Uses sources/lorem.php functions to place appropriate stock-text. Should not hard-code things, as the code is intended to be declaritive.
	 * Assumptions: You can assume all Lang/CSS/Javascript files in this addon have been pre-required.
	 *
	 * @return array			Array of previews, each is Tempcode. Normally we have just one preview, but occasionally it is good to test templates are flexible (e.g. if they use IF_EMPTY, we can test with and without blank data).
	 */
	function tpl_preview__atom_wrapper()
	{
		$content=do_lorem_template('ATOM_ENTRY',array(
			'TITLE'=>lorem_phrase(),
			'VIEW_URL'=>placeholder_url(),
			'DATE'=>placeholder_time(),
			'EDIT_DATE'=>placeholder_time(),
			'CATEGORY_RAW'=>lorem_word(),
			'CATEGORY'=>lorem_word(),
			'AUTHOR'=>lorem_word(),
			'SUMMARY'=>lorem_word(),
			'NEWS'=>lorem_word(),
		));


		return array(
			lorem_globalise(
				do_lorem_template('ATOM_WRAPPER',array(
					'MODE'=>lorem_word(),
					'MODE_NICE'=>lorem_word(),
					'FILTER'=>lorem_word_2(),
					'DATE'=>placeholder_time(),
					'LOGO_URL'=>placeholder_image_url(),
					'CONTENT'=>$content,
					'CUTOFF'=>placeholder_number(),
					'ABOUT'=>lorem_paragraph(),
					'VERSION'=>lorem_word(),
					'COPYRIGHT'=>lorem_phrase(),
				)
			),NULL,'',true),
		);
	}

	/**
	 * Get a preview(s) of a (group of) template(s), as a full standalone piece of HTML in Tempcode format.
	 * Uses sources/lorem.php functions to place appropriate stock-text. Should not hard-code things, as the code is intended to be declaritive.
	 * Assumptions: You can assume all Lang/CSS/Javascript files in this addon have been pre-required.
	 *
	 * @return array			Array of previews, each is Tempcode. Normally we have just one preview, but occasionally it is good to test templates are flexible (e.g. if they use IF_EMPTY, we can test with and without blank data).
	 */
	function tpl_preview__rss_xslt()
	{
		require_lang('rss');

		return array(
			lorem_globalise(
				do_lorem_template('RSS_XSLT',array(
					'JAVASCRIPT_XSL_MOPUP'=>'',
				)
			),NULL,'',true),
		);
	}

	/**
	 * Get a preview(s) of a (group of) template(s), as a full standalone piece of HTML in Tempcode format.
	 * Uses sources/lorem.php functions to place appropriate stock-text. Should not hard-code things, as the code is intended to be declaritive.
	 * Assumptions: You can assume all Lang/CSS/Javascript files in this addon have been pre-required.
	 *
	 * @return array			Array of previews, each is Tempcode. Normally we have just one preview, but occasionally it is good to test templates are flexible (e.g. if they use IF_EMPTY, we can test with and without blank data).
	 */
	function tpl_preview__atom_xslt()
	{
		require_lang('rss');

		return array(
			lorem_globalise(
				do_lorem_template('ATOM_XSLT',array(
					'JAVASCRIPT_XSL_MOPUP'=>'',
				)
			),NULL,'',true),
		);
	}

	/**
	 * Get a preview(s) of a (group of) template(s), as a full standalone piece of HTML in Tempcode format.
	 * Uses sources/lorem.php functions to place appropriate stock-text. Should not hard-code things, as the code is intended to be declaritive.
	 * Assumptions: You can assume all Lang/CSS/Javascript files in this addon have been pre-required.
	 *
	 * @return array			Array of previews, each is Tempcode. Normally we have just one preview, but occasionally it is good to test templates are flexible (e.g. if they use IF_EMPTY, we can test with and without blank data).
	 */
	function tpl_preview__opml_xslt()
	{
		require_lang('rss');
		return array(
			lorem_globalise(
				do_lorem_template('OPML_XSLT',array(
					'JAVASCRIPT_XSL_MOPUP'=>'',
				)
			),NULL,'',true),
		);
	}

	/**
	 * Get a preview(s) of a (group of) template(s), as a full standalone piece of HTML in Tempcode format.
	 * Uses sources/lorem.php functions to place appropriate stock-text. Should not hard-code things, as the code is intended to be declaritive.
	 * Assumptions: You can assume all Lang/CSS/Javascript files in this addon have been pre-required.
	 *
	 * @return array			Array of previews, each is Tempcode. Normally we have just one preview, but occasionally it is good to test templates are flexible (e.g. if they use IF_EMPTY, we can test with and without blank data).
	 */
	function tpl_preview__opml_wrapper()
	{
		require_lang('rss');
		return array(
			lorem_globalise(
				do_lorem_template('OPML_WRAPPER',array(
					'FEEDS'=>placeholder_array(),
					'ABOUT'=>lorem_phrase(),
					'DATE'=>placeholder_time(),
					'TITLE'=>lorem_phrase(),
					'MODE'=>lorem_word(),
				)
			),NULL,'',true),
		);
	}

	/**
	 * Get a preview(s) of a (group of) template(s), as a full standalone piece of HTML in Tempcode format.
	 * Uses sources/lorem.php functions to place appropriate stock-text. Should not hard-code things, as the code is intended to be declaritive.
	 * Assumptions: You can assume all Lang/CSS/Javascript files in this addon have been pre-required.
	 *
	 * @return array			Array of previews, each is Tempcode. Normally we have just one preview, but occasionally it is good to test templates are flexible (e.g. if they use IF_EMPTY, we can test with and without blank data).
	 */
	function tpl_preview__rss_header()
	{
		return array(
			lorem_globalise(
				do_lorem_template('RSS_HEADER',array(
					'FEED_URL'=>placeholder_url(),
				)
			),NULL,'',true),
		);
	}
}
