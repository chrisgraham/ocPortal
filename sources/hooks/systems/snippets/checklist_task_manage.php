<?php /*

 ocPortal
 Copyright (c) ocProducts, 2004-2012

 See text/EN/licence.txt for full licencing information.


 NOTE TO PROGRAMMERS:
   Do not edit this file. If you need to make changes, save your changed file to the appropriate *_custom folder
   **** If you ignore this advice, then your website upgrades (e.g. for bug fixes) will likely kill your changes ****

*/

/**
 * @license		http://opensource.org/licenses/cpal_1.0 Common Public Attribution License
 * @copyright	ocProducts Ltd
 * @package		core_adminzone_frontpage
 */

class Hook_checklist_task_manage
{

	/**
	 * Standard modular run function for snippet hooks. Generates XHTML to insert into a page using AJAX.
	 *
	 * @return tempcode  The snippet
	 */
	function run()
	{
		$type=get_param('type');

		if (!has_zone_access(get_member(),'adminzone')) return new ocp_tempcode();

		decache('main_staff_checklist');

		require_lang('staff_checklist');

		switch ($type)
		{
			case 'add':
				$recurinterval=get_param_integer('recurinterval',0);

				$task_title=get_param('tasktitle',false,true);

				$id=$GLOBALS['SITE_DB']->query_insert('customtasks',array(
					'tasktitle'=>$task_title,
					'datetimeadded'=>time(),
					'recurinterval'=>$recurinterval,
					'recurevery'=>get_param('recurevery'),
					'taskisdone'=>NULL,
				),true);

				require_code('notifications');
				$subject=do_lang('CT_NOTIFICATION_MAIL_SUBJECT',get_site_name(),$task_title);
				$mail=do_lang('CT_NOTIFICATION_MAIL',comcode_escape(get_site_name()),comcode_escape($task_title));
				dispatch_notification('checklist_task',NULL,$subject,$mail);

				return do_template('BLOCK_MAIN_STAFF_CHECKLIST_CUSTOM_TASK',array(
					'TASK_TITLE'=>comcode_to_tempcode(get_param('tasktitle',false,true)),
					'ADD_DATE'=>display_time_period(time()),
					'RECUR_INTERVAL'=>($recurinterval==0)?'':integer_format($recurinterval),
					'RECUR_EVERY'=>get_param('recurevery'),
					'TASK_DONE'=>'not_completed',
					'ID'=>strval($id),
				));

			case 'delete':
				$GLOBALS['SITE_DB']->query_delete('customtasks',array(
					'id'=>get_param_integer('id'),
				),'',1);
				break;

			case 'mark_done':
				$GLOBALS['SITE_DB']->query_update('customtasks',array('taskisdone'=>time()),array('id'=>get_param_integer('id')),'',1);
				break;

			case 'mark_undone':
				$GLOBALS['SITE_DB']->query_update('customtasks',array('taskisdone'=>NULL),array('id'=>get_param_integer('id')),'',1);
				break;
		}

		return new ocp_tempcode();
	}

}

