<?php /*

 ocPortal
 Copyright (c) ocProducts, 2004-2012

 See text/EN/licence.txt for full licencing information.


 NOTE TO PROGRAMMERS:
   Do not edit this file. If you need to make changes, save your changed file to the appropriate *_custom folder
   **** If you ignore this advice, then your website upgrades (e.g. for bug fixes) will likely kill your changes ****

*/

/**
 * @license		http://opensource.org/licenses/cpal_1.0 Common Public Attribution License
 * @copyright	ocProducts Ltd
 * @package		core_cleanup_tools
 */

class Hook_orphaned_uploads
{

	/**
	 * Standard modular info function.
	 *
	 * @return ?array	Map of module info (NULL: module is disabled).
	 */
	function info()
	{
		$dbs_bak=$GLOBALS['NO_DB_SCOPE_CHECK'];
		$GLOBALS['NO_DB_SCOPE_CHECK']=true;
		$urlpaths=$GLOBALS['SITE_DB']->query_select('db_meta',array('m_name','m_table'),array('m_type'=>'URLPATH'));
		$count=0;
		foreach ($urlpaths as $urlpath)
		{
			$count+=$GLOBALS['SITE_DB']->query_value($urlpath['m_table'],'COUNT(*)');
			if ($count>10000) return NULL; // Too much!
		}
		$GLOBALS['NO_DB_SCOPE_CHECK']=$dbs_bak;

		$info=array();
		$info['title']=do_lang_tempcode('ORPHANED_UPLOADS');
		$info['description']=do_lang_tempcode('DESCRIPTION_ORPHANED_UPLOADS');
		$info['type']='optimise';

		return $info;
	}

	/**
	 * Standard modular run function.
	 *
	 * @return tempcode	Results
	 */
	function run()
	{
		$dbs_bak=$GLOBALS['NO_DB_SCOPE_CHECK'];
		$GLOBALS['NO_DB_SCOPE_CHECK']=true;

		// Find known paths
		$known_urls=array();
		$urlpaths=$GLOBALS['SITE_DB']->query_select('db_meta',array('m_name','m_table'),array('m_type'=>'URLPATH'));
		$base_url=get_custom_base_url();
		foreach ($urlpaths as $urlpath)
		{
			$ofs=$GLOBALS['SITE_DB']->query_select($urlpath['m_table'],array($urlpath['m_name']));
			foreach ($ofs as $of)
			{
				$url=$of[$urlpath['m_name']];
				if (url_is_local($url))
				{
					$known_urls[rawurldecode($url)]=1;
				} else
				{
					if (substr($url,0,strlen($base_url))==$base_url)
					{
						$known_urls[rawurldecode(substr($url,strlen($base_url)+1))]=1;
					}
				}
			}
		}

		$all_files=$this->do_dir('uploads');
		$orphaned=array();
		foreach ($all_files as $file)
		{
			if (!array_key_exists($file,$known_urls))
			{
				$orphaned[]=array('URL'=>get_custom_base_url().'/'.str_replace('%2F','/',rawurlencode($file)));
			}
		}

		$GLOBALS['NO_DB_SCOPE_CHECK']=$dbs_bak;

		return do_template('CLEANUP_ORPHANED_UPLOADS',array('_GUID'=>'21049d738f67554cff0891d343c02ad3','FOUND'=>$orphaned));
	}

	/**
	 * Search a directory recursively for files.
	 *
	 * @param  PATH		Path to search
	 * @return array		List of files
	 */
	function do_dir($dir)
	{
		$out=array();
		$_dir=($dir=='')?get_custom_file_base():(get_custom_file_base().'/'.$dir);
		$dh=@opendir($_dir);
		if ($dh!==false)
		{
			while (($file=readdir($dh))!==false)
			{
				if (in_array($file,array('filedump','auto_thumbs','website_specific','index.html','.htaccess'))) continue;

				if ($file[0]!='.')
				{
					if (is_file($_dir.'/'.$file))
					{
						$out[]=$dir.'/'.$file;
					}
					elseif (is_dir($_dir.'/'.$file))
					{
						$out=array_merge($out,$this->do_dir($dir.(($dir!='')?'/':'').$file));
					}
				}
			}
		}
		return $out;
	}

}


