<?php /*

 ocPortal
 Copyright (c) ocProducts, 2004-2012

 See text/EN/licence.txt for full licencing information.


 NOTE TO PROGRAMMERS:
   Do not edit this file. If you need to make changes, save your changed file to the appropriate *_custom folder
   **** If you ignore this advice, then your website upgrades (e.g. for bug fixes) will likely kill your changes ****

*/

/**
 * @license		http://opensource.org/licenses/cpal_1.0 Common Public Attribution License
 * @copyright	ocProducts Ltd
 * @package		core_cleanup_tools
 */

/**
 * Module page class.
 */
class Module_admin_cleanup
{

	/**
	 * Standard modular info function.
	 *
	 * @return ?array	Map of module info (NULL: module is disabled).
	 */
	function info()
	{
		$info=array();
		$info['author']='Chris Graham';
		$info['organisation']='ocProducts';
		$info['hacked_by']=NULL;
		$info['hack_version']=NULL;
		$info['version']=3;
		$info['locked']=false;
		$info['update_require_upgrade']=1;
		return $info;
	}

	/**
	 * Standard modular uninstall function.
	 */
	function uninstall()
	{
		delete_config_option('is_on_block_cache');
		delete_config_option('is_on_template_cache');
		delete_config_option('is_on_comcode_page_cache');
		delete_config_option('is_on_lang_cache');
	}

	/**
	 * Standard modular install function.
	 *
	 * @param  ?integer	What version we're upgrading from (NULL: new install)
	 * @param  ?integer	What hack version we're upgrading from (NULL: new-install/not-upgrading-from-a-hacked-version)
	 */
	function install($upgrade_from=NULL,$upgrade_from_hack=NULL)
	{
		if (is_null($upgrade_from))
		{
			add_config_option('BLOCK_CACHE','is_on_block_cache','tick','return $GLOBALS[\'SEMI_DEV_MODE\']?\'0\':\'1\';','SITE','CACHES',1);
			add_config_option('TEMPLATE_CACHE','is_on_template_cache','tick','return \'1\';','SITE','CACHES',1);
			add_config_option('COMCODE_PAGE_CACHE','is_on_comcode_page_cache','tick','return \'1\';','SITE','CACHES',1);
		}
		if ((is_null($upgrade_from)) || ($upgrade_from<3))
		{
			add_config_option('LANGUAGE_CACHE','is_on_lang_cache','tick','return \'1\';','SITE','CACHES',1);
		}
	}

	/**
	 * Standard modular entry-point finder function.
	 *
	 * @return ?array	A map of entry points (type-code=>language-code) (NULL: disabled).
	 */
	function get_entry_points()
	{
		return array('misc'=>'CLEANUP_TOOLS');
	}

	/**
	 * Standard modular run function.
	 *
	 * @return tempcode	The result of execution.
	 */
	function run()
	{
		$GLOBALS['HELPER_PANEL_PIC']='pagepics/cleanup';
		$GLOBALS['HELPER_PANEL_TUTORIAL']='tut_cleanup';

		require_lang('cleanup');
		require_code('view_modes');

		// Decide what we're doing
		$type=get_param('type','misc');

		if ($type=='misc') return $this->choose_cache_type();
		if ($type=='rebuild') return $this->do_rebuild();

		return new ocp_tempcode();
	}

	/**
	 * The UI for choosing caches to empty.
	 *
	 * @return tempcode		The UI
	 */
	function choose_cache_type()
	{
		$hooks=find_all_hooks('modules','admin_cleanup');

		$title=get_screen_title('CLEANUP_TOOLS');

		$url=build_url(array('page'=>'_SELF','type'=>'rebuild'),'_SELF');

		require_code('form_templates');

		$fields_cache=new ocp_tempcode();
		$fields_optimise=new ocp_tempcode();
		foreach (array_keys($hooks) as $hook)
		{
			require_code('hooks/modules/admin_cleanup/'.filter_naughty_harsh($hook));
			$object=object_factory('Hook_'.filter_naughty_harsh($hook),true);
			if (is_null($object)) continue;
			$output=$object->info();
			if (!is_null($output))
			{
				$tick=form_input_tick($output['title'],$output['description'],$hook,false);
				if ($output['type']=='cache')
				{
					$fields_cache->attach($tick);
				} else
				{
					$fields_optimise->attach($tick);
				}
			}
		}

		$fields=new ocp_tempcode();
		$fields->attach(do_template('FORM_SCREEN_FIELD_SPACER',array('SECTION_HIDDEN'=>true,'TITLE'=>do_lang_tempcode('CACHES_PAGE_EXP_OPTIMISERS'),'HELP'=>'')));
		$fields->attach($fields_optimise);
		$fields->attach(do_template('FORM_SCREEN_FIELD_SPACER',array('TITLE'=>do_lang_tempcode('CACHES_PAGE_EXP_CACHES'),'HELP'=>do_lang_tempcode('CACHES_PAGE_CACHES'))));
		$fields->attach($fields_cache);

		return do_template('FORM_SCREEN',array('_GUID'=>'85bfdf171484604594a157aa8983f920','SKIP_VALIDATION'=>true,'TEXT'=>do_lang_tempcode('CACHES_PAGE'),'SUBMIT_NAME'=>do_lang_tempcode('PROCEED'),'HIDDEN'=>'','TITLE'=>$title,'FIELDS'=>$fields,'URL'=>$url));
	}

	/**
	 * The actualiser for emptying caches.
	 *
	 * @return tempcode		The UI
	 */
	function do_rebuild()
	{
		$hooks=find_all_hooks('modules','admin_cleanup');

		// Fiddle the order a bit
		if (array_key_exists('ocf_topics',$hooks))
		{
			unset($hooks['ocf_topics']);
			$hooks['ocf_topics']='sources_custom';
		}
		if (array_key_exists('ocf',$hooks))
		{
			unset($hooks['ocf']);
			$hooks['ocf']='sources_custom';
		}
		if (array_key_exists('ocf_members',$hooks))
		{
			unset($hooks['ocf_members']);
			$hooks['ocf_members']='sources_custom';
		}

		$todo=array();
		foreach (array_keys($hooks) as $hook)
		{
			if (post_param_integer($hook,0)==1)
				$todo[]=$hook;
		}
		$messages=ocportal_cleanup($todo);
		$messages->attach(paragraph(do_lang_tempcode('SUCCESS')));

		$title=get_screen_title('CLEANUP_TOOLS');

		breadcrumb_set_parents(array(array('_SELF:_SELF:misc',do_lang_tempcode('CLEANUP_TOOLS'))));
		breadcrumb_set_self(do_lang_tempcode('DONE'));

		return do_template('CLEANUP_COMPLETED_SCREEN',array('_GUID'=>'598510a9ad9f01f3c0806319b32b5033','TITLE'=>$title,'MESSAGES'=>$messages));
	}

}


