<?php /*

 ocPortal
 Copyright (c) ocProducts, 2004-2012

 See text/EN/licence.txt for full licencing information.


 NOTE TO PROGRAMMERS:
   Do not edit this file. If you need to make changes, save your changed file to the appropriate *_custom folder
   **** If you ignore this advice, then your website upgrades (e.g. for bug fixes) will likely kill your changes ****

*/

/**
 * @license		http://opensource.org/licenses/cpal_1.0 Common Public Attribution License
 * @copyright	ocProducts Ltd
 * @package		chat
 */

/**
 * Module page class.
 */
class Module_chat
{

	/**
	 * Standard modular info function.
	 *
	 * @return ?array	Map of module info (NULL: module is disabled).
	 */
	function info()
	{
		$info=array();
		$info['author']='Philip Withnall';
		$info['organisation']='ocProducts';
		$info['hacked_by']=NULL;
		$info['hack_version']=NULL;
		$info['version']=11;
		$info['locked']=false;
		$info['update_require_upgrade']=1;
		return $info;
	}

	/**
	 * Standard modular uninstall function.
	 */
	function uninstall()
	{
		$GLOBALS['SITE_DB']->drop_if_exists('chat_rooms');
		$GLOBALS['SITE_DB']->drop_if_exists('chat_messages');
		$GLOBALS['SITE_DB']->drop_if_exists('chat_blocking');
		$GLOBALS['SITE_DB']->drop_if_exists('chat_buddies');
		$GLOBALS['SITE_DB']->drop_if_exists('chat_active');
		$GLOBALS['SITE_DB']->drop_if_exists('chat_events');
		$GLOBALS['SITE_DB']->drop_if_exists('chat_sound_effects');

		delete_config_option('is_on_chat');
		delete_config_option('chat_flood_timelimit');
		delete_config_option('chat_default_post_colour');
		delete_config_option('chat_default_post_font');
		delete_config_option('chat_private_room_deletion_time');
		delete_config_option('username_click_im');
		delete_config_option('points_chat');
		delete_config_option('chat_show_stats_count_users');
		delete_config_option('chat_show_stats_count_rooms');
		delete_config_option('chat_show_stats_count_messages');
		delete_config_option('sitewide_im');
		delete_config_option('group_private_chatrooms');

		delete_specific_permission('create_private_room');
		delete_specific_permission('start_im');
		delete_specific_permission('moderate_my_private_rooms');
		delete_specific_permission('ban_chatters_from_rooms');

		$GLOBALS['SITE_DB']->query_delete('group_page_access',array('page_name'=>'cms_chat'));
		$GLOBALS['SITE_DB']->query_delete('group_category_access',array('module_the_name'=>'chat'));

		delete_menu_item_simple('_SEARCH:chat:type=misc');
		delete_menu_item_simple('_SEARCH:chat:type=misc:member_id={$USER_OVERIDE}');
	}

	/**
	 * Standard modular install function.
	 *
	 * @param  ?integer	What version we're upgrading from (NULL: new install)
	 * @param  ?integer	What hack version we're upgrading from (NULL: new-install/not-upgrading-from-a-hacked-version)
	 */
	function install($upgrade_from=NULL,$upgrade_from_hack=NULL)
	{
		require_lang('chat');
		if (is_null($upgrade_from))
		{
			$GLOBALS['SITE_DB']->create_table('chat_rooms',array(
				'id'=>'*AUTO',
				'room_name'=>'SHORT_TEXT',
				'room_owner'=>'?INTEGER',
				'allow_list'=>'LONG_TEXT',
				'allow_list_groups'=>'LONG_TEXT',
				'disallow_list'=>'LONG_TEXT',
				'disallow_list_groups'=>'LONG_TEXT',
				'room_language'=>'LANGUAGE_NAME',
				'c_welcome'=>'LONG_TRANS',
				'is_im'=>'BINARY'
			));

			$GLOBALS['SITE_DB']->create_index('chat_rooms','room_name',array('room_name'));
			$GLOBALS['SITE_DB']->create_index('chat_rooms','is_im',array('is_im','room_name'));
			$GLOBALS['SITE_DB']->create_index('chat_rooms','first_public',array('is_im','id'));
			$GLOBALS['SITE_DB']->create_index('chat_rooms','allow_list',array('allow_list(30)'));

			// Create our default chat room. By default, this will be as the shoutbox
			$GLOBALS['SITE_DB']->query_insert('chat_rooms',array('is_im'=>0,'allow_list_groups'=>'','disallow_list_groups'=>'','allow_list'=>'','disallow_list'=>'','room_name'=>do_lang('DEFAULT_ROOM_GENERAL_CHAT'),'room_language'=>get_site_default_lang(),'room_owner'=>NULL,'c_welcome'=>insert_lang('',2)));

			$GLOBALS['SITE_DB']->create_table('chat_messages',array(
				'id'=>'*AUTO',
				'system_message'=>'BINARY',
				'ip_address'=>'IP',
				'room_id'=>'AUTO_LINK',
				'user_id'=>'USER',
				'date_and_time'=>'TIME',
				'the_message'=>'LONG_TRANS',	// Comcode
				'text_colour'=>'SHORT_TEXT',
				'font_name'=>'SHORT_TEXT'
			));

			$GLOBALS['SITE_DB']->create_index('chat_messages','ordering',array('date_and_time'));
			$GLOBALS['SITE_DB']->create_index('chat_messages','room_id',array('room_id'));

			add_config_option('FLOOD_TIMELIMIT','chat_flood_timelimit','integer','return \'5\';','FEATURE','SECTION_CHAT');

			$GLOBALS['FORUM_DRIVER']->install_create_custom_field('points_gained_chat',20,1,0,0,0,'','integer');

			require_lang('chat');
			add_menu_item_simple('main_community',NULL,'CHAT_LOBBY','_SEARCH:chat:type=misc',0,0,true,'',0,'menu_items/community_navigation/chat');
		}
		if (($upgrade_from<3) || (is_null($upgrade_from)))
		{
			add_config_option('CHAT_OPTIONS_COLOUR_NAME','chat_default_post_colour','colour','return \'inherit\';','FEATURE','SECTION_CHAT'); // NB: compressed up due to 256 character limit
			add_config_option('CHAT_OPTIONS_TEXT_NAME','chat_default_post_font','list','return \'Verdana\';','FEATURE','SECTION_CHAT',0,'Arial|Courier|Georgia|Impact|Times| Trebuchet|Verdana|Tahoma|Geneva|Helvetica');
			add_config_option('PRIVATE_ROOM_DELETION_TIME','chat_private_room_deletion_time','integer','return \'1440\';','FEATURE','SECTION_CHAT');
		}
		if ((!is_null($upgrade_from)) && ($upgrade_from<4))
		{
			$GLOBALS['SITE_DB']->add_table_field('chat_rooms','allow_list_groups','LONG_TEXT');
			$GLOBALS['SITE_DB']->add_table_field('chat_rooms','disallow_list','LONG_TEXT');
			$GLOBALS['SITE_DB']->add_table_field('chat_rooms','disallow_list_groups','LONG_TEXT');
			$GLOBALS['SITE_DB']->add_table_field('chat_rooms','c_welcome','LONG_TRANS');
			$GLOBALS['SITE_DB']->add_table_field('chat_messages','ip_address','IP','127.0.0.1');

			$GLOBALS['SITE_DB']->query_update('chat_rooms',array('allow_list'=>''),array('allow_list'=>NULL));
			$GLOBALS['SITE_DB']->alter_table_field('chat_rooms','allow_list','LONG_TEXT');
		}
		if ((is_null($upgrade_from)) || ($upgrade_from<5))
		{
			$usergroups=$GLOBALS['FORUM_DRIVER']->get_usergroup_list(false,true);
			foreach (array_keys($usergroups) as $id)
			{
				$GLOBALS['SITE_DB']->query_insert('group_page_access',array('page_name'=>'cms_chat','zone_name'=>'cms','group_id'=>$id)); // Don't want to let anyone do chat room moderation just because we let them manage content
			}
		}
		if ((is_null($upgrade_from)) || ($upgrade_from<6))
		{
			add_specific_permission('SECTION_CHAT','create_private_room',true);
			add_specific_permission('SECTION_CHAT','start_im',true);
			add_config_option('USERNAME_CLICK_IM','username_click_im','tick','return \'0\';','FEATURE','SECTION_CHAT');

			$GLOBALS['SITE_DB']->create_table('chat_blocking',array(
				'member_blocker'=>'*USER',
				'member_blocked'=>'*USER',
				'date_and_time'=>'TIME'
			));

			$GLOBALS['SITE_DB']->create_table('chat_buddies',array(
				'member_likes'=>'*USER',
				'member_liked'=>'*USER',
				'date_and_time'=>'TIME'
			));

			$GLOBALS['SITE_DB']->create_table('chat_events',array(
				'id'=>'*AUTO',
				'e_type_code'=>'ID_TEXT', // BECOME_ACTIVE, BECOME_INACTIVE, PREINVITED_TO_IM, JOIN_IM, DEINVOLVE_IM, INVITED_TO_IM
				'e_member_id'=>'USER',
				'e_room_id'=>'?AUTO_LINK',
				'e_date_and_time'=>'TIME'
			));

			$GLOBALS['SITE_DB']->create_index('chat_events','event_ordering',array('e_date_and_time'));
		}
		if ((!is_null($upgrade_from)) && ($upgrade_from<6))
		{
			$GLOBALS['SITE_DB']->add_table_field('chat_rooms','is_im','BINARY');
		}
		if ((!is_null($upgrade_from)) && ($upgrade_from<7))
		{
			$GLOBALS['SITE_DB']->query_delete('db_meta_indices',array('i_table'=>'chat_active','i_name'=>'member_active_select','i_fields'=>'member_id'));
			$GLOBALS['SITE_DB']->query('DROP INDEX member_active_select ON '.$GLOBALS['SITE_DB']->get_table_prefix().'chat_active');
		}
		if ((is_null($upgrade_from)) || ($upgrade_from<8))
		{
			add_config_option('CHATTING','points_chat','integer','return addon_installed(\'points\')?\'1\':NULL;','POINTS','COUNT_POINTS_GIVEN');
			add_config_option('COUNT_CHATTERS','chat_show_stats_count_users','tick','return addon_installed(\'stats_block\')?\'0\':NULL;','BLOCKS','STATISTICS');
			add_config_option('ROOMS','chat_show_stats_count_rooms','tick','return addon_installed(\'stats_block\')?\'0\':NULL;','BLOCKS','STATISTICS');
			add_config_option('COUNT_CHATPOSTS','chat_show_stats_count_messages','tick','return addon_installed(\'stats_block\')?\'0\':NULL;','BLOCKS','STATISTICS');
		}
		if ((!is_null($upgrade_from)) && ($upgrade_from<9))
		{
			$GLOBALS['SITE_DB']->promote_text_field_to_comcode('chat_messages','the_message','id',4,true);
			$GLOBALS['SITE_DB']->query_delete('chat_messages');
			delete_config_option('is_on_chat');
			$GLOBALS['SITE_DB']->add_table_field('chat_messages','system_message','BINARY');
		}
		if ((is_null($upgrade_from)) || ($upgrade_from<10))
		{
			$GLOBALS['SITE_DB']->drop_if_exists('chat_active');
			$GLOBALS['SITE_DB']->create_table('chat_active',array(
				'id'=>'*AUTO', // serves no purpose really, but needed as room_id can be NULL but is in compound key
				'member_id'=>'USER',
				'room_id'=>'?AUTO_LINK',
				'date_and_time'=>'TIME',
			));
			$GLOBALS['SITE_DB']->create_index('chat_active','active_ordering',array('date_and_time'));
			$GLOBALS['SITE_DB']->create_index('chat_active','member_select',array('member_id'));
			$GLOBALS['SITE_DB']->create_index('chat_active','room_select',array('room_id'));

			$GLOBALS['SITE_DB']->create_table('chat_sound_effects',array(
				's_member'=>'*USER',
				's_effect_id'=>'*ID_TEXT',
				's_url'=>'URLPATH'
			));

			$rooms=$GLOBALS['SITE_DB']->query_select('chat_rooms',array('id'));
			foreach ($rooms as $room)
			{
				// Set access
				$admin_groups=$GLOBALS['FORUM_DRIVER']->get_super_admin_groups();
				$groups=$GLOBALS['FORUM_DRIVER']->get_usergroup_list(false,true);
				foreach (array_keys($groups) as $group_id)
				{
					if (in_array($group_id,$admin_groups)) continue;
					$GLOBALS['SITE_DB']->query_insert('group_category_access',array('module_the_name'=>'chat','category_name'=>strval($room['id']),'group_id'=>$group_id));
				}
			}

			add_specific_permission('SECTION_CHAT','moderate_my_private_rooms',true);
			add_specific_permission('SECTION_CHAT','ban_chatters_from_rooms',false);
			// NB: edit_lowrange_content may be overridden for the chat module also, allowing editing messages in rooms

			add_config_option('SITEWIDE_IM','sitewide_im','tick','return \'0\';','FEATURE','SECTION_CHAT');
		}
		if ((is_null($upgrade_from)) || ($upgrade_from<11))
		{
			add_config_option('GROUP_PRIVATE_CHATROOMS','group_private_chatrooms','tick','return is_null($old=get_value(\'no_group_private_chatrooms\'))?\'1\':invert_value($old);','FEATURE','SECTION_CHAT');
		}
	}

	/**
	 * Standard modular entry-point finder function.
	 *
	 * @return ?array	A map of entry points (type-code=>language-code) (NULL: disabled).
	 */
	function get_entry_points()
	{
		$ret=array('misc'=>'CHAT_LOBBY','private'=>'CREATE_PRIVATE_ROOM','blocking_interface'=>'MEMBER_BLOCKING');
		if (!is_guest())
			$ret['set_effects']='CHAT_SET_EFFECTS';
		return $ret;
	}

	/**
	 * Standard modular page-link finder function (does not return the main entry-points that are not inside the tree).
	 *
	 * @param  ?integer  The number of tree levels to computer (NULL: no limit)
	 * @param  boolean	Whether to not return stuff that does not support permissions (unless it is underneath something that does).
	 * @param  ?string	Position to start at in the tree. Does not need to be respected. (NULL: from root)
	 * @param  boolean	Whether to avoid returning categories.
	 * @return ?array		A tuple: 1) full tree structure [made up of (pagelink, permission-module, permissions-id, title, children, ?entry point for the children, ?children permission module, ?whether there are children) OR a list of maps from a get_* function] 2) permissions-page 3) optional base entry-point for the tree 4) optional permission-module 5) optional permissions-id (NULL: disabled).
	 */
	function get_page_links($max_depth=NULL,$require_permission_support=false,$start_at=NULL,$dont_care_about_categories=false)
	{
		unset($start_at);

		$count=$GLOBALS['SITE_DB']->query_value('chat_rooms','COUNT(*)',array('is_im'=>0));
		$permission_page='cms_chat';
		$tree=array();
		if ($count<500)
		{
			if (($max_depth>0) || (is_null($max_depth)))
			{
				$rows=$dont_care_about_categories?array():$GLOBALS['SITE_DB']->query_select('chat_rooms',array('id','room_name'),array('is_im'=>0));
				foreach ($rows as $row)
				{
					$tree[]=array('_SELF:_SELF:type=room:id='.strval($row['id']),'chat',$row['id'],$row['room_name'],array());
				}
			}
		}
		return array($tree,$permission_page);
	}

	/**
	 * Standard modular new-style deep page-link finder function (does not return the main entry-points).
	 *
	 * @param  string  	Callback function to send discovered page-links to.
	 * @param  MEMBER		The member we are finding stuff for (we only find what the member can view).
	 * @param  integer	Code for how deep we are tunnelling down, in terms of whether we are getting entries as well as categories.
	 * @param  string		Stub used to create page-links. This is passed in because we don't want to assume a zone or page name within this function.
	 */
	function get_sitemap_pagelinks($callback,$member_id,$depth,$pagelink_stub)
	{
		// Entries
		if ($depth>=DEPTH__ENTRIES)
		{
			$start=0;
			do
			{
				$rows=$GLOBALS['SITE_DB']->query_select('chat_rooms',array('id','room_name AS title'),array('is_im'=>0),'',500,$start);

				foreach ($rows as $row)
				{
					$pagelink=$pagelink_stub.'room:'.strval($row['id']);
					call_user_func_array($callback,array($pagelink,$pagelink_stub.'misc',NULL,NULL,0.2,$row['title'])); // Callback
				}

				$start+=500;
			}
			while (array_key_exists(0,$rows));
		}
	}

	/**
	 * Convert a page link to a category ID and category permission module type.
	 *
	 * @param  string	The page link
	 * @return array	The pair
	 */
	function extract_page_link_permissions($page_link)
	{
		$matches=array();
		preg_match('#^([^:]*):([^:]*):type=room:id=(.*)$#',$page_link,$matches);
		return array($matches[3],'chat');
	}

	/**
	 * Standard modular run function.
	 *
	 * @return tempcode	The result of execution.
	 */
	function run()
	{
		if (!has_js()) warn_exit(do_lang_tempcode('MSG_JS_NEEDED'));

		// What action are we going to do?
		$type=get_param('type','misc');

		require_javascript('javascript_ajax');
		require_javascript('javascript_chat');
		require_javascript('javascript_sound');
		require_javascript('javascript_editing');
		require_javascript('javascript_validation');

		require_lang('comcode');
		require_lang('chat');
		require_code('chat');
		require_css('chat');

		if ($type=='room') return $this->chat_room();
		if ($type=='options') return $this->chat_options();
		if ($type=='private') return $this->chat_private();
		if ($type=='_private') return $this->_chat_private();
		if ($type=='download_logs') return $this->chat_download_logs();
		if ($type=='_download_logs') return $this->_chat_download_logs();
		if ($type=='misc') return $this->chat_lobby();
		if ($type=='blocking_interface') return $this->blocking_interface();
		if ($type=='blocking_set') return $this->blocking_set();
		if ($type=='blocking_add') return $this->blocking_add();
		if ($type=='blocking_remove') return $this->blocking_remove();
		if ($type=='buddy_add') return $this->friend_add(); // TODO: Remove after a while. This is legacy, as emails may have gone out using the old URL, from before upgrade
		if ($type=='friend_add') return $this->friend_add();
		if ($type=='friend_remove') return $this->friend_remove();
		if ($type=='friends_list') return $this->friends_list();
		if ($type=='set_effects') return $this->set_effects();
		if ($type=='_set_effects') return $this->_set_effects();

		return new ocp_tempcode();
	}

	/**
	 * The UI to choose a chat room.
	 *
	 * @return tempcode		The UI
	 */
	function chat_lobby()
	{
		require_javascript('javascript_ajax_people_lists');

		// Who are we viewing the lobby of?
		$member_id=get_param_integer('member_id',get_member());
		if (!is_guest($member_id)) enforce_personal_access($member_id);

		// Starting an IM? The IM will popup by AJAX once the page loads, because it's in the system now
		$enter_im=get_param_integer('enter_im',NULL);
		if ((!is_null($enter_im)) && (!is_guest()))
		{
			$test=$GLOBALS['SITE_DB']->query('SELECT * FROM '.get_table_prefix().'chat_rooms WHERE is_im=1 AND allow_list LIKE \''.db_encode_like('%'.strval($enter_im).'%').'\'');
			$found_one=false;
			foreach ($test as $t)
			{
				if ((check_chatroom_access($t,true,$enter_im)) && (check_chatroom_access($t,true,get_member())))
					$found_one=true;
			}
			if (!$found_one) // No currently IM between us and them open, so open new one
			{
				require_code('chat2');
				add_chatroom('',$GLOBALS['FORUM_DRIVER']->get_username(get_member()),get_member(),strval(get_member()).','.strval($enter_im),'','','',user_lang(),1);
			}
		}

		// And empty IM conversations
		$old_dead_ims=$GLOBALS['SITE_DB']->query('SELECT r.* FROM '.get_table_prefix().'chat_rooms r JOIN '.get_table_prefix().'chat_events e ON e.e_room_id=r.id AND '.db_string_equal_to('e.e_type_code','JOIN_IM').' LEFT JOIN '.get_table_prefix().'chat_messages m ON m.room_id=r.id WHERE r.is_im=1 AND e_date_and_time<'.strval(time()-CHAT_EVENT_PRUNE).' AND m.id IS NULL');
		foreach ($old_dead_ims as $old)
		{
			require_code('chat2');
			delete_chatroom($old['id']);
		}
		// Prune chat events
		if (!$GLOBALS['SITE_DB']->table_is_locked('chat_events'))
			$GLOBALS['SITE_DB']->query('DELETE FROM '.$GLOBALS['SITE_DB']->get_table_prefix().'chat_events WHERE e_date_and_time<'.strval(time()-CHAT_EVENT_PRUNE));

		enter_chat_lobby();

		// Generic stuff: Title, feed URL
		$title=get_screen_title('CHAT_LOBBY');
		$GLOBALS['FEED_URL']=find_script('backend').'?mode=chat&filter=';

		// Rooms
		$rows=$GLOBALS['SITE_DB']->query_select('chat_rooms',array('*'),array('is_im'=>0),'ORDER BY room_name DESC',200);
		if (count($rows)==200) // Ah, limit to not show private ones then
		{
			$rows=$GLOBALS['SITE_DB']->query_select('chat_rooms',array('*'),array('is_im'=>0,'allow_list'=>''),'ORDER BY room_name DESC',200);
		}
		$fields=new ocp_tempcode();
		foreach ($rows as $myrow)
		{
			// Check to see if we are on the room's allow list, if we aren't, don't display the room :D
			$showroom=check_chatroom_access($myrow,true,$member_id);

			if ((!handle_chatroom_pruning($myrow)) && ($showroom))
			{
				$users=get_chatters_in_room($myrow['id']);
				$usernames=get_chatters_in_room_tpl($users);
				//$url=build_url(array('page'=>'_SELF','mode'=>$mode,'type'=>'room','id'=>$myrow['id']),'_SELF');
				$url=build_url(array('page'=>'_SELF','type'=>'room','id'=>$myrow['id']),'_SELF');
				$room_link=do_template('CHAT_ROOM_LINK',array('PRIVATE'=>$myrow['allow_list']!='' || $myrow['allow_list_groups']!='','ID'=>strval($myrow['id']),'NAME'=>$myrow['room_name'],'USERNAMES'=>$usernames,'URL'=>$url));
				$fields->attach($room_link);
			}
		}

		// Extra links
		if (has_actual_page_access($member_id,'cms_chat'))
		{
			$modlink=hyperlink(build_url(array('page'=>'cms_chat'),get_module_zone('cms_chat')),do_lang_tempcode('CHAT_MOD_PANEL'));
		} else $modlink=new ocp_tempcode();
		if (!is_guest())
		{
			$blocking_link=hyperlink(build_url(array('page'=>'_SELF','type'=>'blocking_interface'),'_SELF'),do_lang_tempcode('MEMBER_BLOCKING'));
		} else $blocking_link=new ocp_tempcode();
		if ((has_specific_permission($member_id,'create_private_room')) && (!is_guest()))
		{
			$private_room=hyperlink(build_url(array('page'=>'_SELF','type'=>'private'),'_SELF'),do_lang_tempcode('CREATE_PRIVATE_ROOM'));
		} else $private_room=new ocp_tempcode();

		// Friend list and IM
		if (($member_id==get_member()) && (!is_guest()))
		{
			$post_url_add_friend=build_url(array('page'=>'_SELF','type'=>'friend_add','redirect'=>get_self_url(true)),'_SELF');
			$post_url_remove_friends=build_url(array('page'=>'_SELF','type'=>'friend_remove','redirect'=>get_self_url(true)),'_SELF');
		} else
		{
			$post_url_add_friend=new ocp_tempcode();
			$post_url_remove_friends=new ocp_tempcode();
		}
		$online_url=$GLOBALS['FORUM_DRIVER']->online_members_url();
		$can_im=has_specific_permission(get_member(),'start_im');
		$friends=array();
		$friend_rows=$GLOBALS['SITE_DB']->query_select('chat_buddies',array('*'),array('member_likes'=>$member_id),'ORDER BY date_and_time',100);
		$friend_active=get_chatters_in_room(NULL);
		global $SESSION_CACHE;
		$users_online_time_seconds=CHAT_ACTIVITY_PRUNE;
		foreach ($friend_rows as $friend)
		{
			if ((array_key_exists($friend['member_liked'],$friend_active)) && (!member_blocked(get_member(),$friend['member_liked'])))
			{
				$online_text=do_lang_tempcode('ACTIVE');
			} else
			{
				$online_text=member_is_online($friend['member_liked'])?do_lang_tempcode('ONLINE'):do_lang_tempcode('OFFLINE');
			}
			$username=array_key_exists($friend['member_liked'],$friend_active)?$friend_active[$friend['member_liked']]:$GLOBALS['FORUM_DRIVER']->get_username($friend['member_liked']);
			if (!is_null($username))
			{
				$member_profile_url=$GLOBALS['FORUM_DRIVER']->member_profile_url($friend['member_liked'],true,true);
				$friends[]=array('DATE_AND_TIME_RAW'=>strval($friend['date_and_time']),'DATE_AND_TIME'=>get_timezoned_date($friend['date_and_time'],false),'MEMBER_PROFILE_URL'=>$member_profile_url,'MEMBER_ID'=>strval($friend['member_liked']),'USERNAME'=>$username,'ONLINE_TEXT'=>$online_text);
			}
		}
		$messages_php=find_script('messages');
		$im_area_template=do_template('CHAT_LOBBY_IM_AREA',array('_GUID'=>'cd230527da03caa596135f74647b2ca7','MESSAGES_PHP'=>$messages_php,'ROOM_ID'=>'__room_id__'));
		$make_friend_url=build_url(array('page'=>'_SELF','type'=>'friend_add','member_id'=>'__id__'),'_SELF');
		$block_member_url=build_url(array('page'=>'_SELF','type'=>'blocking_add','member_id'=>'__id__'),'_SELF');
		$profile_url=$GLOBALS['FORUM_DRIVER']->member_profile_url(-100,true,true);
		if (is_object($profile_url)) $profile_url=$profile_url->evaluate();
		$profile_url=str_replace('-100','__id__',$profile_url);
		$im_participant_template=do_template('CHAT_LOBBY_IM_PARTICIPANT',array('_GUID'=>'9a36efe3a449dabac6ef9866d1f6f48a','PROFILE_URL'=>$profile_url,'ID'=>'__id__','ROOM_ID'=>'__room_id__','USERNAME'=>'__username__','ONLINE'=>'__online__','AVATAR_URL'=>'__avatar_url__','MAKE_FRIEND_URL'=>$make_friend_url,'BLOCK_MEMBER_URL'=>$block_member_url));

		if (!is_guest())
		{
			$seteffectslink=hyperlink(build_url(array('page'=>'_SELF','type'=>'set_effects'/*,'redirect'=>get_self_url(true,true)*/),'_SELF'),do_lang_tempcode('CHAT_SET_EFFECTS'),true);
		} else $seteffectslink=new ocp_tempcode();

		$message=new ocp_tempcode();
		$message->attach(do_lang_tempcode('WELCOME_CHAT_LOBBY',$private_room->is_empty()?new ocp_tempcode():do_lang_tempcode('WELCOME_CHAT_LOBBY_PRIVATE_ROOMS'),$can_im?do_lang_tempcode('WELCOME_CHAT_LOBBY_USE_IM'):new ocp_tempcode(),$can_im?do_lang_tempcode((get_option('sitewide_im')=='1')?'WELCOME_CHAT_LOBBY_USE_IM2_SITEWIDE':'WELCOME_CHAT_LOBBY_USE_IM2_NO_SITEWIDE'):new ocp_tempcode()));

		if (has_actual_page_access(get_member(),'admin_chat'))
		{
			$add_room_url=build_url(array('page'=>'admin_chat','type'=>'ad'),get_module_zone('admin_chat'));
		} else $add_room_url=new ocp_tempcode();

		return do_template('CHAT_LOBBY_SCREEN',array('_GUID'=>'f82ddfd0dccbd25752dd05a1d87429e2','ADD_ROOM_URL'=>$add_room_url,'MESSAGE'=>$message,'CHAT_SOUND'=>get_chat_sound_tpl(),'IM_PARTICIPANT_TEMPLATE'=>$im_participant_template,'IM_AREA_TEMPLATE'=>$im_area_template,'FRIENDS'=>$friends,'CAN_IM'=>$can_im,'ONLINE_URL'=>$online_url,'URL_ADD_FRIEND'=>$post_url_add_friend,'URL_REMOVE_FRIENDS'=>$post_url_remove_friends,'TITLE'=>$title,'ROOMS'=>$fields,'PRIVATE_ROOM'=>$private_room,'MOD_LINK'=>$modlink,'BLOCKING_LINK'=>$blocking_link,'SETEFFECTS_LINK'=>$seteffectslink));
	}

	/**
	 * The UI for a chat room.
	 *
	 * @return tempcode		The UI
	 */
	function chat_room()
	{
		require_javascript('javascript_yahoo_2');
		require_javascript('javascript_colour_picker');
		require_javascript('javascript_posting');
		require_css('colour_picker');

		$prefs=@$_COOKIE['ocp_chat_prefs'];
		$prefs=@explode(';',$prefs);
		//$mode=get_param('mode','');
		$room_id=get_param_integer('id',1);
		$GLOBALS['FEED_URL']=find_script('backend').'?mode=chat&filter='.strval($room_id);
		$room_check=$GLOBALS['SITE_DB']->query_select('chat_rooms',array('id','is_im','allow_list','allow_list_groups','disallow_list','disallow_list_groups','room_owner'),array('id'=>$room_id),'',1);
		if (!array_key_exists(0,$room_check))
		{
			warn_exit(do_lang_tempcode('MISSING_RESOURCE'));
		}
		check_chatroom_access($room_check[0]);

		$posting_name=do_lang_tempcode('SEND_MESSAGE');
		$keep=symbol_tempcode('KEEP');
		$posting_url=find_script('messages').'?mode=2&room_id='.strval($room_id).$keep->evaluate();
		$messages_link=find_script('messages').'?room_id='.strval($room_id).'&zone='.get_zone_name().$keep->evaluate();
		$comcode_help=build_url(array('page'=>'userguide_comcode'),get_comcode_zone('userguide_comcode'));
		$chatcode_help=build_url(array('page'=>'userguide_chatcode'),get_comcode_zone('userguide_chatcode'));
		$buttons=new ocp_tempcode();
		$_buttons=array(
			'url',
			'thumb',
			'email',
			'code',
			'hide'
		);
		if (has_specific_permission(get_member(),'comcode_dangerous')) $_buttons[]='html';
		foreach ($_buttons as $button) $buttons->attach(do_template('COMCODE_EDITOR_BUTTON',array('_GUID'=>'4fd75edb2d091b1c78a71c653efb18f0','DIVIDER'=>false,'FIELD_NAME'=>'post','TITLE'=>do_lang_tempcode('INPUT_COMCODE_'.$button),'B'=>$button)));

		if (!is_guest())
		{
			$_buttons=array(
				'private_message',
				'invite',
				'new_room'
			);
			foreach ($_buttons as $button) $buttons->attach(do_template('CHATCODE_EDITOR_BUTTON',array('_GUID'=>'f1c3ccc2b6f0b68d71b7d256b3817cf3','TITLE'=>do_lang_tempcode('INPUT_CHATCODE_'.$button),'B'=>$button)));
		}

		$micro_buttons=new ocp_tempcode();
		$_micro_buttons=array(
			'b',
			'i',
		);
		foreach ($_micro_buttons as $button)
			$micro_buttons->attach(do_template('COMCODE_EDITOR_MICRO_BUTTON',array('_GUID'=>'3ced1e569e0c6feaeadbc09f7f89e7ee','FIELD_NAME'=>'post','TITLE'=>do_lang_tempcode('INPUT_COMCODE_'.$button),'B'=>$button)));

		$user_colour=((array_key_exists(0,$prefs)) && ($prefs[0]!=''))?$prefs[0]:get_option('chat_default_post_colour');
		$line_contents=((array_key_exists(1,$prefs)) && ($prefs[1]!=''))?$prefs[1]:get_option('chat_default_post_font');

		$cs_post_url=build_url(array('page'=>'_SELF','type'=>'options','id'=>$room_id),'_SELF');

		$yourname=$GLOBALS['FORUM_DRIVER']->get_username(get_member());
		if (is_guest()) $yourname.='-'.substr(md5(get_ip_address()),0,5);

		$messages_php=find_script('messages');
		$debug=(get_param_integer('debug',0)==1)?'block':'none';

		$title=get_screen_title('ROOM');

		if (has_actual_page_access(get_member(),'cms_chat',NULL,array('chat',strval($room_id)),array('edit_lowrange_content',($room_check[0]['room_owner']==get_member())?'moderate_my_private_rooms':NULL)))
		{
			$link=build_url(array('page'=>'cms_chat','type'=>'room','id'=>$room_id),get_module_zone('cms_chat'));
			$modlink=hyperlink($link,do_lang_tempcode('CHAT_MOD_PANEL'),true);
		}
		else $modlink=new ocp_tempcode();

		if (has_actual_page_access(get_member(),'admin_chat'))
		{
			// The user is staff, so let him have the admin link
			$link=build_url(array('page'=>'admin_chat','type'=>'_ed','id'=>$room_id),'adminzone');
			$adminlink=hyperlink($link,do_lang_tempcode('EDIT_CHATROOM'),true);
		}
		else $adminlink=new ocp_tempcode();

		$link=build_url(array('page'=>'_SELF','type'=>'room','id'=>$room_id),'_SELF');
		$refreshlink=hyperlink($link,do_lang_tempcode('CHAT_REFRESH'));

		$link=build_url(array('page'=>'_SELF','type'=>'download_logs'),'_SELF');
		$downloadlink=hyperlink(build_url(array('page'=>'_SELF','type'=>'download_logs','id'=>$room_id),'_SELF'),do_lang_tempcode('CHAT_DOWNLOAD_LOGS'),true);

		$seteffectslink=hyperlink(build_url(array('page'=>'_SELF','type'=>'set_effects'/*,'redirect'=>get_self_url(true,true)*/),'_SELF'),do_lang_tempcode('CHAT_SET_EFFECTS'),true);

		$links=array($adminlink,$modlink,$refreshlink,$downloadlink,$seteffectslink);

		breadcrumb_set_parents(array(array('_SELF:_SELF:misc',do_lang_tempcode('CHAT_LOBBY_END_CHAT'))));

		return do_template('CHAT_ROOM_SCREEN',array('_GUID'=>'867a0b050c050c81d33482d131783eb0','CHATTERS'=>get_chatters_in_room_tpl(get_chatters_in_room($room_id)),'CHAT_SOUND'=>get_chat_sound_tpl(),'ROOM_ID'=>strval($room_id),'DEBUG'=>$debug,'MESSAGES_PHP'=>$messages_php,'TEXT_COLOUR_DEFAULT'=>$user_colour,'FONT_NAME_DEFAULT'=>$line_contents,'OPTIONS_URL'=>$cs_post_url,'COMCODE_HELP'=>$comcode_help,'CHATCODE_HELP'=>$chatcode_help,'ROOM_NAME'=>get_chatroom_name(get_param_integer('id',1)),'MICRO_BUTTONS'=>$micro_buttons,'BUTTONS'=>$buttons,'YOUR_NAME'=>$yourname,'MESSAGES_URL'=>$messages_link,'POSTING_URL'=>$posting_url,'SUBMIT_VALUE'=>$posting_name,'INTRODUCTION'=>'','TITLE'=>$title,'LINKS'=>$links));
	}

	/**
	 * The UI to create a private chat room.
	 *
	 * @return tempcode		The UI
	 */
	function chat_private()
	{
		require_code('chat2');

		if (is_guest()) access_denied('NOT_AS_GUEST');

		check_specific_permission('create_private_room');

		// This function instantiates a private room...WE MUST BE TIGHT ON SECURITY WITH THIS ONE!
		$title=get_screen_title('CREATE_PRIVATE_ROOM');

		require_code('form_templates');

		$fields=get_chatroom_fields(true,do_lang('CHAT_PRIVATE_DEFAULT_ROOM_NAME',escape_html($GLOBALS['FORUM_DRIVER']->get_username(get_member()))),'','',strval(get_member()));

		$posting_name=do_lang_tempcode('CREATE_PRIVATE_ROOM');
		$posting_url=build_url(array('page'=>'_SELF','type'=>'_private'),'_SELF');
		$text=paragraph(do_lang_tempcode('CHAT_PRIVATE_ROOM_DESCRIPTION',display_time_period(60*intval(get_option('chat_private_room_deletion_time')))));
		if (intval(get_option('chat_private_room_deletion_time'))==0) $text=new ocp_tempcode();

		breadcrumb_set_parents(array(array('_SELF:_SELF:misc',do_lang_tempcode('CHAT_LOBBY'))));

		return do_template('FORM_SCREEN',array('_GUID'=>'5697add8e81f641559a212697d35a470','HIDDEN'=>'','TITLE'=>$title,'FIELDS'=>$fields,'SUBMIT_NAME'=>$posting_name,'URL'=>$posting_url,'TEXT'=>$text));
	}

	/**
	 * The actualiser to add a chat room.
	 *
	 * @return tempcode		The UI to choose a chat room (probably what was just added, but...)
	 */
	function _chat_private()
	{
		$title=get_screen_title('CREATE_PRIVATE_ROOM');

		require_code('chat2');

		if (is_guest()) access_denied('NOT_AS_GUEST');

		check_specific_permission('create_private_room');

		// Check the input
		$room_name=post_param('room_name',do_lang('CHAT_PRIVATE_DEFAULT_ROOM_NAME',$GLOBALS['FORUM_DRIVER']->get_username(get_member())));
		$room_lang=post_param('room_lang',user_lang());
		list($allow2,$allow2_groups,$disallow2,$disallow2_groups)=read_in_chat_perm_fields();
		$allow=explode(',',$allow2);

		$new_room_id=add_chatroom(post_param('c_welcome'),$room_name,get_member(),$allow2,$allow2_groups,$disallow2,$disallow2_groups,$room_lang);

		$rooms=chat_get_all_rooms();
		// For each person in the allow list, insert a private message into every room (except the new one) asking them to join the new room
		foreach ($allow as $person)
		{
			$person=trim($person);
			if (($person!='') && ($person!=$GLOBALS['FORUM_DRIVER']->get_username(get_member())) && ($person!=do_lang('GUEST')))
			{
				foreach ($rooms as $room)
				{
					if ($room['id']!=$new_room_id)
					{
						chat_post_message($room['id'],'[invite="'.$person.'"]'.$room_name.'[/invite]',get_option('chat_default_post_font'),get_option('chat_default_post_colour'));
					}
				}
			}
		}

		// Set access
		$admin_groups=$GLOBALS['FORUM_DRIVER']->get_super_admin_groups();
		$groups=$GLOBALS['FORUM_DRIVER']->get_usergroup_list(false,true);
		$GLOBALS['SITE_DB']->query_delete('group_category_access',array('module_the_name'=>'chat','category_name'=>strval($new_room_id)));
		foreach (array_keys($groups) as $group_id)
		{
			if (in_array($group_id,$admin_groups)) continue;
			$GLOBALS['SITE_DB']->query_insert('group_category_access',array('module_the_name'=>'chat','category_name'=>strval($new_room_id),'group_id'=>$group_id));
		}

		$url=build_url(array('page'=>'_SELF','type'=>'room','id'=>$new_room_id),'_SELF');
		return redirect_screen($title,$url,do_lang_tempcode('SUCCESS'));
	}

	/**
	 * The UI to manage who is blocked.
	 *
	 * @return tempcode		The UI
	 */
	function blocking_interface()
	{
		if (is_guest()) access_denied('NOT_AS_GUEST');

		$title=get_screen_title('MEMBER_BLOCKING');

		require_code('form_templates');

		$fields=new ocp_tempcode();

		$blocked=$GLOBALS['SITE_DB']->query_select('chat_blocking',array('member_blocked'),array('member_blocker'=>get_member()));
		$fields->attach(do_template('FORM_SCREEN_FIELD_SPACER',array('TITLE'=>do_lang_tempcode('EXISTING_BLOCKS'),'HELP'=>(count($blocked)!=0)?new ocp_tempcode():do_lang_tempcode('NONE_EM'))));
		foreach ($blocked as $row)
		{
			$username=$GLOBALS['FORUM_DRIVER']->get_username($row['member_blocked']);
			if (!is_null($username))
				$fields->attach(form_input_tick(do_lang_tempcode('BLOCK_THEM',escape_html($username)),do_lang_tempcode('_BLOCK_MEMBER',$username),'block_'.strval($row['member_blocked']),true));
		}

		$fields->attach(do_template('FORM_SCREEN_FIELD_SPACER',array('TITLE'=>do_lang_tempcode('ADD_BLOCK'))));
		$fields->attach(form_input_username(do_lang_tempcode('USERNAME'),do_lang_tempcode('BLOCK_MEMBER_MANUAL'),'username','',false));

		/*if ($fields->is_empty())
		{
			inform_exit(do_lang_tempcode('NOBODY_BLOCKED_YET'));
		}*/

		$post_url=build_url(array('page'=>'_SELF','type'=>'blocking_set'),'_SELF');

		breadcrumb_set_parents(array(array('_SELF:_SELF:misc',do_lang_tempcode('CHAT_LOBBY'))));

		return do_template('FORM_SCREEN',array('_GUID'=>'74e0700f4d2b52d71a0cbf8eb3045ecf','TITLE'=>$title,'HIDDEN'=>'','SKIP_VALIDATION'=>true,'TEXT'=>do_lang_tempcode('ABOUT_BLOCKING'),'SUBMIT_NAME'=>do_lang_tempcode('PROCEED'),'FIELDS'=>$fields,'URL'=>$post_url));
	}

	/**
	 * Change blocking settings.
	 *
	 * @return tempcode		The UI
	 */
	function blocking_set()
	{
		if (is_guest()) access_denied('NOT_AS_GUEST');

		$title=get_screen_title('MEMBER_BLOCKING');

		$blocked=$GLOBALS['SITE_DB']->query_select('chat_blocking',array('member_blocked'),array('member_blocker'=>get_member()));

		$username=trim(post_param('username',''));
		if ($username!='')
		{
			$_member_id=$GLOBALS['FORUM_DRIVER']->get_member_from_username($username);
			if (is_null($_member_id)) warn_exit(do_lang_tempcode('_USER_NO_EXIST',escape_html($username)));
			require_code('chat2');
			blocking_add(get_member(),$_member_id);
		}

		require_code('chat2');
		foreach ($blocked as $row)
		{
			if (post_param_integer('block_'.$row['member_blocked'],0)==0)
			{
				blocking_remove(get_member(),$row['member_blocked']);
			}
		}

		breadcrumb_set_parents(array(array('_SELF:_SELF:misc',do_lang_tempcode('CHAT_LOBBY'))));

		$_url=build_url(array('page'=>'_SELF','type'=>'misc'),'_SELF');
		$url=$_url->evaluate();
		return redirect_screen($title,$url,do_lang_tempcode('SUCCESS'));
	}

	/**
	 * Certain add/remove actions may be triggered by hyperlinks, but they need confirming because a link click should never constitute a state change.
	 *
	 * @param  ID_TEXT		The language code of our action
	 * @param  string			Parameter of action
	 * @return ?tempcode		If a confirm page is being output, this is it (NULL: continue as before)
	 */
	function handle_repost($action,$param)
	{
		$member_id=get_param_integer('member_id',NULL);
		if (!is_null($member_id))
		{
			breadcrumb_set_parents(array(array('_SELF:_SELF:misc',do_lang_tempcode('CHAT_LOBBY'))));

			$username=$GLOBALS['FORUM_DRIVER']->get_username($member_id);
			if (strpos(do_lang($action),'{1}')!==false)
			{
				$preview=do_lang_tempcode($action,escape_html($param));
				$title=get_screen_title($preview,false);
			} else
			{
				$title=get_screen_title($action);
				$preview=do_lang_tempcode('PERFORM_ACTION_ON_PREVIEW',do_lang_tempcode($action),escape_html($param));
			}
			$fields=form_input_hidden('member_id',strval($member_id));
			$map=array('page'=>'_SELF','type'=>get_param('type'));
			$redirect=get_param('redirect','');
			if ($redirect!='') $map['redirect']=$redirect;
			$url=build_url($map,'_SELF');
			return do_template('CONFIRM_SCREEN',array('_GUID'=>'3b76b0e41541d5a38671134e92128d9f','TITLE'=>$title,'FIELDS'=>$fields,'URL'=>$url,'PREVIEW'=>$preview));
		}
		return NULL;
	}

	/**
	 * Change blocking settings (add one specific to block list, and then redirect).
	 *
	 * @return tempcode		The UI
	 */
	function blocking_add()
	{
		if (is_guest()) access_denied('NOT_AS_GUEST');

		$title=get_screen_title('BLOCK_MEMBER');

		$member_id=either_param_integer('member_id');
		$username=$GLOBALS['FORUM_DRIVER']->get_username($member_id);

		if ($GLOBALS['FORUM_DRIVER']->is_staff($member_id)) warn_exit(do_lang_tempcode('NO_BLOCK_STAFF'));

		$test=$this->handle_repost('BLOCK_MEMBER',$username);
		if (!is_null($test)) return $test;

		require_code('chat2');
		blocking_add(get_member(),$member_id);

		breadcrumb_set_parents(array(array('_SELF:_SELF:misc',do_lang_tempcode('CHAT_LOBBY'))));

		$url=get_param('redirect','');
		if ($url=='')
		{
			return inform_screen($title,do_lang_tempcode('SUCCESS'));
		}
		return redirect_screen($title,$url,do_lang_tempcode('SUCCESS'));
	}

	/**
	 * Change blocking settings (remove one specific member from block list, and then redirect).
	 *
	 * @return tempcode		The UI
	 */
	function blocking_remove()
	{
		if (is_guest()) access_denied('NOT_AS_GUEST');

		$lang='UNBLOCK_MEMBER';

		$title=get_screen_title($lang);

		$member_id=either_param_integer('member_id');
		$username=$GLOBALS['FORUM_DRIVER']->get_username($member_id);

		$test=$this->handle_repost($lang,$username);
		if (!is_null($test)) return $test;

		require_code('chat2');
		blocking_remove(get_member(),$member_id);

		breadcrumb_set_parents(array(array('_SELF:_SELF:misc',do_lang_tempcode('CHAT_LOBBY'))));

		$url=get_param('redirect','');
		if ($url=='')
		{
			return inform_screen($title,do_lang_tempcode('SUCCESS'));
		}
		return redirect_screen($title,$url,do_lang_tempcode('SUCCESS'));
	}

	/**
	 * Add a friend.
	 *
	 * @return tempcode		The UI
	 */
	function friend_add()
	{
		if (is_guest()) access_denied('NOT_AS_GUEST');

		$title=get_screen_title('MAKE_FRIEND');

		$member_id=either_param_integer('member_id',NULL);
		if (is_null($member_id))
		{
			$username=post_param('friend_username');
			$member_id=$GLOBALS['FORUM_DRIVER']->get_member_from_username($username);
			if (is_null($member_id)) warn_exit(do_lang_tempcode('_USER_NO_EXIST',escape_html($username)));
		} else
		{
			$username=$GLOBALS['FORUM_DRIVER']->get_username($member_id);
		}

		// Can't befriend oneself (yes, this may happen!)
		if ($member_id==get_member()) warn_exit(do_lang_tempcode('CANNOT_BEFRIEND_ONESELF'));
		if (!is_null($GLOBALS['SITE_DB']->query_value_null_ok('chat_buddies','date_and_time',array('member_likes'=>get_member(),'member_liked'=>$member_id))))
			warn_exit(do_lang('ALREADY_FRIENDS',escape_html($username)));

		$test=$this->handle_repost('ADD_FRIEND_ACTION_DESCRIPTION',$username);
		if (!is_null($test)) return $test;

		require_code('chat2');
		friend_add(get_member(),$member_id);

		breadcrumb_set_parents(array(array('_SELF:_SELF:misc',do_lang_tempcode('CHAT_LOBBY'))));

		$url=get_param('redirect','');
		if ($url=='')
		{
			return inform_screen($title,do_lang_tempcode('NOW_ADDED_AS_FRIEND',escape_html($username)));
		}
		return redirect_screen($title,$url,do_lang_tempcode('NOW_ADDED_AS_FRIEND',escape_html($username)));
	}

	/**
	 * Remove a friend.
	 *
	 * @return tempcode		The UI
	 */
	function friend_remove()
	{
		if (is_guest()) access_denied('NOT_AS_GUEST');

		$title=get_screen_title('DUMP_FRIEND');

		$member_id=either_param_integer('member_id',NULL);
		if (is_null($member_id))
		{
			$members=array();
			foreach ($_POST as $key=>$val)
			{
				if ((substr($key,0,7)=='select_') && ($val=='1'))
				{
					$members[]=intval(substr($key,7));
				}
			}
			$username=do_lang('_MULTIPLE');
		} else
		{
			$members=array($member_id);
			$username=$GLOBALS['FORUM_DRIVER']->get_username($member_id);

			if (is_null($GLOBALS['SITE_DB']->query_value_null_ok('chat_buddies','date_and_time',array('member_likes'=>get_member(),'member_liked'=>$member_id))))
				warn_exit(do_lang('NOT_CURRENTLY_FRIENDS',escape_html($username)));
		}

		$test=$this->handle_repost('DUMP_FRIEND',$username);
		if (!is_null($test)) return $test;

		require_code('chat2');
		foreach ($members as $member_id)
		{
			friend_remove(get_member(),$member_id);
		}

		breadcrumb_set_parents(array(array('_SELF:_SELF:misc',do_lang_tempcode('CHAT_LOBBY'))));

		$url=get_param('redirect','');
		if ($url=='')
		{
			return inform_screen($title,do_lang_tempcode('SUCCESS'));
		}
		return redirect_screen($title,$url,do_lang_tempcode('SUCCESS'));
	}

	/**
	 * List all the friends of a member.
	 *
	 * @return tempcode		The UI
	 */
	function friends_list()
	{
		$member_id=get_param_integer('id');

		$title=get_screen_title('FRIENDS',true,array(escape_html($GLOBALS['FORUM_DRIVER']->get_username($member_id))));

		$text_id=do_lang_tempcode('FRIENDS',escape_html($GLOBALS['FORUM_DRIVER']->get_username($member_id)));

		$mode=get_param('mode','both'); // single, both
		$max=get_param_integer('max',100);
		$start=get_param_integer('start',0);

		if ($mode=='both')
		{
			$query=$GLOBALS['SITE_DB']->get_table_prefix().'chat_buddies a LEFT JOIN '.$GLOBALS['SITE_DB']->get_table_prefix().'chat_buddies b ON a.member_liked=b.member_likes AND a.member_liked='.strval($member_id).' WHERE (a.member_likes='.strval(intval($member_id)).' OR a.member_liked='.strval(intval($member_id)).') AND b.member_liked IS NULL';
			$rows=$GLOBALS['SITE_DB']->query('SELECT a.* FROM '.$query.' ORDER BY date_and_time',$max,$start);
		} else
		{
			$query=$GLOBALS['SITE_DB']->get_table_prefix().'chat_buddies WHERE member_likes='.strval(intval($member_id));
			$rows=$GLOBALS['SITE_DB']->query('SELECT * FROM '.$query.' ORDER BY date_and_time',$max,$start);
		}
		$max_rows=$GLOBALS['SITE_DB']->query_value_null_ok_full('SELECT COUNT(*) FROM '.$query);

		$friends=array();
		$blocked=collapse_1d_complexity('member_blocked',$GLOBALS['SITE_DB']->query_select('chat_blocking',array('member_blocked'),array('member_blocker'=>$member_id)));
		$all_usergroups=$GLOBALS['FORUM_DRIVER']->get_usergroup_list(true);
		foreach ($rows as $i=>$row)
		{
			$f_id=($row['member_liked']==$member_id)?$row['member_likes']:$row['member_liked'];

			if (($f_id==$row['member_likes']) || (!in_array($f_id,$blocked)))
			{
				$appears_twice=(/*if was member_liked we already know it is not twice as our query filters those dupes away*/$row['member_likes']==$member_id) && !is_null($GLOBALS['SITE_DB']->query_value('chat_buddies','member_likes',array('member_liked'=>$member_id)));
				require_code('ocf_members2');
				$friend_username=$GLOBALS['FORUM_DRIVER']->get_username($f_id);
				$friend_usergroup_id=$GLOBALS['FORUM_DRIVER']->get_member_row_field($f_id,'m_primary_group');
				$friend_usergroup=array_key_exists($friend_usergroup_id,$all_usergroups)?$all_usergroups[$friend_usergroup_id]:do_lang_tempcode('UNKNOWN');
				$mutual_label=do_lang('MUTUAL_FRIEND');
				$box=render_member_box($f_id,false,NULL,NULL,true,($f_id==get_member() || $member_id==get_member())?array($mutual_label=>do_lang($appears_twice?'YES':'NO')):NULL);
				if ($box->is_empty()) continue;
				$friend_map=array('USERGROUP'=>$friend_usergroup,'USERNAME'=>$friend_username,'URL'=>$GLOBALS['FORUM_DRIVER']->member_profile_url($f_id,false,true),'F_ID'=>strval($f_id),'BOX'=>$box);
				$friends[]=$friend_map;
			}
		}

		breadcrumb_set_parents(array(array('_SELF:_SELF:misc',do_lang_tempcode('CHAT_LOBBY'))));

		require_code('templates_pagination');
		$pagination=pagination($text_id,NULL,$start,'start',$max,'max',$max_rows,NULL,'friends_list',true);

		return do_template('CHAT_FRIENDS_LIST_SCREEN',array('_GUID'=>'70b11d3c01ff551be42a0472d27dd207','TITLE'=>$title,'FRIENDS'=>$friends,'PAGINATION'=>$pagination));
	}

	/**
	 * Save the user's options into a cookie.
	 *
	 * @return tempcode		The UI
	 */
	function chat_options()
	{
		$title=get_screen_title('ROOM');

		$value=post_param('text_colour',get_option('chat_default_post_colour')).';'.post_param('font_name',get_option('chat_default_post_font')).';';
		require_code('users_active_actions');
		ocp_setcookie('ocp_chat_prefs',$value);

		$url=build_url(array('page'=>'_SELF','type'=>'room','id'=>get_param_integer('id'),'no_reenter_message'=>1),'_SELF');
		return redirect_screen($title,$url,do_lang_tempcode('SUCCESS'));
	}

	/**
	 * The UI to download chat logs.
	 *
	 * @return tempcode		The UI
	 */
	function chat_download_logs()
	{
		$title=get_screen_title('CHAT_DOWNLOAD_LOGS');

		$chatrooms=chat_get_all_rooms();
		$select=new ocp_tempcode();
		$select_by_default=get_param_integer('id',NULL);
		foreach ($chatrooms as $value)
		{
			$select->attach(form_input_list_entry(strval($value['id']),$value['id']==$select_by_default,$value['room_name'],false));
		}

		$fields=new ocp_tempcode();
		require_code('form_templates');
		$fields->attach(form_input_list(do_lang_tempcode('ROOM_NAME'),do_lang_tempcode('CHAT_DOWNLOAD_LOGS_ROOM_NAME'),'room_name',$select));
		$fields->attach(form_input_date(do_lang_tempcode('CHAT_DOWNLOAD_LOGS_START_DATE'),do_lang_tempcode('CHAT_DOWNLOAD_LOGS_START_DATE_DESCRIPTION'),'start',false,false,true,time()-4*60*60,26));
		$fields->attach(form_input_date(do_lang_tempcode('CHAT_DOWNLOAD_LOGS_FINISH_DATE'),do_lang_tempcode('CHAT_DOWNLOAD_LOGS_FINISH_DATE_DESCRIPTION'),'finish',false,false,true,time(),26));

		$posting_name=do_lang_tempcode('CHAT_DOWNLOAD_LOGS');
		$posting_url=build_url(array('page'=>'_SELF','type'=>'_download_logs'),'_SELF',NULL,false,true);

		if (count($chatrooms)==0) inform_exit(do_lang_tempcode('NO_CATEGORIES'));

		breadcrumb_set_parents(array(array('_SELF:_SELF:misc',do_lang_tempcode('CHAT_LOBBY'))));

		return do_template('FORM_SCREEN',array('_GUID'=>'6741ef01d1c6dd8d2de9be3290666db7','GET'=>true,'SKIP_VALIDATION'=>true,'HIDDEN'=>'','TITLE'=>$title,'FIELDS'=>$fields,'SUBMIT_NAME'=>$posting_name,'URL'=>$posting_url,'TEXT'=>''));
	}

	/**
	 * The actualiser to download chat logs.
	 *
	 * @return tempcode		The UI
	 */
	function _chat_download_logs()
	{
		$title=get_screen_title('CHAT_DOWNLOAD_LOGS');

		$start_date_and_time=get_input_date('start',true);
		$finish_date_and_time=get_input_date('finish',true);

		$room=get_param_integer('room_name');

		// We have the messages, now we have to create a nice little text file...
		$keep=symbol_tempcode('KEEP');
		$modlink=find_script('dllogs').'?room='.strval($room).'&start='.strval($start_date_and_time).'&finish='.strval($finish_date_and_time).'&zone='.get_zone_name().$keep->evaluate();
		//$modlink=hyperlink($modlink,do_lang_tempcode('CHAT_DOWNLOAD_LOGS'));
		//return do_template('CHAT_ROOM_SCREEN',array('_GUID'=>'18dd8ecf06301add0f44bdaf801fbdca','TITLE'=>$title,'INTRODUCTION'=>'','CONTENT'=>$modlink,'LINKS'=>array()));

		require_code('site2');
		assign_refresh($modlink,0.0);
		return do_template('REDIRECT_SCREEN',array('_GUID'=>'227be0596e721d4cbab81b707b6d6ba1','URL'=>$modlink,'TITLE'=>$title,'TEXT'=>do_lang_tempcode('REDIRECTING')));
	}

	/**
	 * The interface for setting sound effects.
	 *
	 * @return tempcode		The UI
	 */
	function set_effects()
	{
		$title=get_screen_title('CHAT_SET_EFFECTS');

		breadcrumb_set_parents(array(array('_SELF:_SELF:misc',do_lang_tempcode('CHAT_LOBBY'))));

		if (is_guest()) access_denied('NOT_AS_GUEST');

		require_lang('javascript');
		require_javascript('javascript_chat');
		require_javascript('javascript_sound');
		require_javascript('javascript_swfupload');
		require_css('swfupload');

		// Find all sounds available
		$library=array();
		$dh=@opendir(get_file_base().'/data/sounds');
		if ($dh!==false)
		{
			while (($f=readdir($dh))!==false)
			{
				if (substr(strtolower($f),-4)=='.mp3')
				{
					$library[$f]=array(
						'EFFECT_SHORT'=>$f,
						'EFFECT'=>'data/sounds/'.$f,
					);
				}
			}
		}
		$dh=@opendir(get_file_base().'/data_custom/sounds');
		if ($dh!==false)
		{
			while (($f=readdir($dh))!==false)
			{
				if (substr(strtolower($f),-4)=='.mp3')
				{
					$library[$f]=array(
						'EFFECT_SHORT'=>$f,
						'EFFECT'=>'data_custom/sounds/'.$f,
					);
				}
			}
		}

		$post_url=build_url(array('page'=>'_SELF','type'=>'_set_effects'),'_SELF');

		$hidden=new ocp_tempcode();
		$redirect=get_param('redirect',NULL);
		if (!is_null($redirect)) $hidden->attach(form_input_hidden('redirect',$redirect));

		$setting_blocks=new ocp_tempcode();

		// Global settings
		$effect_settings=get_effect_settings(); // Find what the member has it set to
		$has_some=false;
		foreach ($effect_settings as $s) if ($s['VALUE']!='-1') $has_some=true;
		$block=do_template('CHAT_SET_EFFECTS_SETTING_BLOCK',array('_GUID'=>'9270ec16622d551c62320ebefba46fad','HAS_SOME'=>$has_some,'EFFECTS'=>$effect_settings,'LIBRARY'=>$library));
		$setting_blocks->attach($block);

		// Per-friend overrides
		$friend_count=$GLOBALS['SITE_DB']->query_value('chat_buddies','COUNT(*)',array('member_likes'=>get_member()));
		if ($friend_count<200)
		{
			$friends=$GLOBALS['SITE_DB']->query_select('chat_buddies',array('member_liked'),array('member_likes'=>get_member()));
			foreach ($friends as $friend)
			{
				$effect_settings=get_effect_settings(false,$friend['member_liked']); // Find what the member has it set to
				$has_some=false;
				foreach ($effect_settings as $s) if ($s['VALUE']!='-1') $has_some=true;
				$block=do_template('CHAT_SET_EFFECTS_SETTING_BLOCK',array('_GUID'=>'28916255c41e5cad386cbd0a045a3373','HAS_SOME'=>$has_some,'MEMBER_ID'=>strval($friend['member_liked']),'USERNAME'=>$GLOBALS['FORUM_DRIVER']->get_username($friend['member_liked']),'EFFECTS'=>$effect_settings,'LIBRARY'=>$library));
				$setting_blocks->attach($block);
			}
		}

		require_code('form_templates');
		handle_max_file_size($hidden);

		return do_template('CHAT_SET_EFFECTS_SCREEN',array('_GUID'=>'f965b4376d603fc14dbcac7fb3c5580d','TITLE'=>$title,'SUBMIT_NAME'=>do_lang_tempcode('SAVE'),'HIDDEN'=>$hidden,'POST_URL'=>$post_url,'SETTING_BLOCKS'=>$setting_blocks));
	}

	/**
	 * The actualiser to set sound effects.
	 *
	 * @return tempcode		The UI
	 */
	function _set_effects()
	{
		$title=get_screen_title('CHAT_SET_EFFECTS');

		breadcrumb_set_parents(array(array('_SELF:_SELF:misc',do_lang_tempcode('CHAT_LOBBY'))));

		require_code('uploads');

		// Find all our suffixes to check for
		$friend_count=$GLOBALS['SITE_DB']->query_value('chat_buddies','COUNT(*)',array('member_likes'=>get_member()));
		$suffixes=array();
		if ($friend_count<200)
		{
			$friends=$GLOBALS['SITE_DB']->query_select('chat_buddies',array('member_liked'),array('member_likes'=>get_member()));
			$suffixes=array('');
			foreach ($friends as $friend)
			{
				$suffixes[]='_'.strval($friend['member_liked']);
			}
		}

		$current_settings=collapse_2d_complexity('s_effect_id','s_url',$GLOBALS['SITE_DB']->query_select('chat_sound_effects',array('s_url','s_effect_id'),array('s_member'=>get_member())));

		// Process data
		foreach ($suffixes as $suffix)
		{
			$effects=get_effect_set($suffix!='');
			foreach ($effects as $effect)
			{
				if (is_null($effect)) continue;

				if ((post_param('select_'.$effect.$suffix)=='-1') && (is_null(post_param('hidFileID_upload_'.$effect.$suffix,NULL))) && (!is_uploaded_file($_FILES['upload_'.$effect.$suffix]['tmp_name']))) // Handle special case of '-1'
				{
					$url='-1';
				} else
				{
					$url_bits=get_url('select_'.$effect.$suffix,'upload_'.$effect.$suffix,'uploads/personal_sound_effects',0,OCP_UPLOAD_MP3);
					$url=$url_bits[0];
				}

				// Delete existing upload, if appropriate
				if ((array_key_exists($effect.$suffix,$current_settings)) && (substr($current_settings[$effect.$suffix],0,31)=='uploads/personal_sound_effects/') && ($current_settings[$effect.$suffix]!=$url))
				{
					@unlink(get_custom_file_base().'/'.filter_naughty($current_settings[$effect.$suffix]));
				}

				// Delete existing setting
				$GLOBALS['SITE_DB']->query_delete('chat_sound_effects',array(
					's_member'=>get_member(),
					's_effect_id'=>$effect.$suffix,
				));

				if ($url!='-1')
				{
					// Add new setting
					$GLOBALS['SITE_DB']->query_insert('chat_sound_effects',array(
						's_member'=>get_member(),
						's_effect_id'=>$effect.$suffix,
						's_url'=>$url
					));
				}
			}
		}

		$redirect=post_param('redirect',NULL);
		if (is_null($redirect))
		{
			return inform_screen($title,do_lang_tempcode('SUCCESS'));
		} else
		{
			require_code('site2');
			assign_refresh($redirect,0.0);
			return do_template('REDIRECT_SCREEN',array('_GUID'=>'6bcc5c60f9b75e9dca719a5db8d24491','URL'=>$redirect,'TITLE'=>$title,'TEXT'=>do_lang_tempcode('SUCCESS')));
		}
	}
}
