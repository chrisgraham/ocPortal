<?php /*

 ocPortal
 Copyright (c) ocProducts, 2004-2014

 See text/EN/licence.txt for full licencing information.


 NOTE TO PROGRAMMERS:
   Do not edit this file. If you need to make changes, save your changed file to the appropriate *_custom folder
   **** If you ignore this advice, then your website upgrades (e.g. for bug fixes) will likely kill your changes ****

*/

/**
 * @license		http://opensource.org/licenses/cpal_1.0 Common Public Attribution License
 * @copyright	ocProducts Ltd
 * @package		core_comcode_pages
 */

/**
 * Module page class.
 */
class Module_cms_comcode_pages
{
	/**
	 * Standard modular info function.
	 *
	 * @return ?array	Map of module info (NULL: module is disabled).
	 */
	function info()
	{
		$info=array();
		$info['author']='Chris Graham';
		$info['organisation']='ocProducts';
		$info['hacked_by']=NULL;
		$info['hack_version']=NULL;
		$info['version']=4;
		$info['update_require_upgrade']=1;
		$info['locked']=true;
		return $info;
	}

	/**
	 * Standard modular entry-point finder function.
	 *
	 * @param  boolean	Whether to check permissions.
	 * @param  ?MEMBER	The member to check permissions as (NULL: current user).
	 * @param  boolean	Whether to allow cross links to other modules (identifiable via a full-page-link rather than a screen-name).
	 * @param  boolean	Whether to avoid any entry-point (or even return NULL to disable the page in the Sitemap) if we know another module, or page_group, is going to link to that entry-point. Note that "!" and "misc" entry points are automatically merged with container page nodes (likely called by page-groupings) as appropriate.
	 * @return ?array		A map of entry points (screen-name=>language-code/string or screen-name=>[language-code/string, icon-theme-image]) (NULL: disabled).
	 */
	function get_entry_points($check_perms=true,$member_id=NULL,$support_crosslinks=true,$be_deferential=false)
	{
		return array(
			'misc'=>array('COMCODE_PAGE_MANAGEMENT','menu/cms/comcode_page_edit'),
		);
	}

	/**
	 * Standard modular privilege-override finder function.
	 *
	 * @return array	A map of privileges that are overridable; privilege to 0 or 1. 0 means "not category overridable". 1 means "category overridable".
	 */
	function get_privilege_overrides()
	{
		return array('submit_highrange_content'=>array(1,'COMCODE_PAGE_ADD'),'edit_highrange_content'=>array(1,'COMCODE_PAGE_EDIT'),'edit_own_highrange_content'=>array(1,'COMCODE_PAGE_OWN_EDIT'),'bypass_validation_highrange_content'=>array(1,'BYPASS_COMCODE_PAGE_VALIDATION'));
	}

	var $title;
	var $page_link;
	var $zone;
	var $file;

	/**
	 * Standard modular pre-run function, so we know meta-data for <head> before we start streaming output.
	 *
	 * @return ?tempcode		Tempcode indicating some kind of exceptional output (NULL: none).
	 */
	function pre_run()
	{
		$type=get_param('type','misc');

		require_lang('zones');

		inform_non_canonical_parameter('parent_page');

		set_helper_panel_tutorial('tut_comcode_pages');

		if ($type=='misc')
		{
			breadcrumb_set_self(do_lang_tempcode('COMCODE_PAGES'));

			set_helper_panel_text(comcode_lang_string('DOC_COMCODE_PAGE_EDIT'));

			$this->title=get_screen_title('COMCODE_PAGE_EDIT');
		}

		if ($type=='_ed')
		{
			require_lang('menus');
			set_helper_panel_text(comcode_lang_string('DOC_WRITING'));

			// Work out what we're editing, and where it's coming from (support for two page_link specifying parameters for destination, with addition of restore_from to override source if different from destination)
			$page_link=filter_naughty(get_param('page_link',''));
			if ($page_link=='') $page_link=get_param('page_link_2');
			if (strpos($page_link,':')===false) $page_link=':'.$page_link;
			$page_link_parts=explode(':',$page_link);
			if (count($page_link_parts)!=2) warn_exit(do_lang_tempcode('ZONE_COLON_FILE'));
			$zone=$page_link_parts[0];
			$file=$page_link_parts[1];

			if ($page_link!='') breadcrumb_set_self(do_lang_tempcode('COMCODE_PAGE_EDIT'));
			breadcrumb_set_parents(array(array('_SELF:_SELF:misc:lang='.get_param('lang',''),do_lang_tempcode('CHOOSE'))));

			$this->title=get_screen_title(($file=='')?'COMCODE_PAGE_ADD':'_COMCODE_PAGE_EDIT',true,array(escape_html($zone),escape_html($file)));

			$this->page_link=$page_link;
			$this->zone=$zone;
			$this->file=$file;
		}

		if ($type=='__ed')
		{
			breadcrumb_set_self(do_lang_tempcode('DONE'));

			$this->title=get_screen_title('COMCODE_PAGE_EDIT');
		}

		return NULL;
	}

	/**
	 * Standard modular run function.
	 *
	 * @return tempcode	The result of execution.
	 */
	function run()
	{
		require_code('zones2');
		require_code('zones3');
		require_code('files');

		$type=get_param('type','misc');

		if ($type=='misc') return $this->ed();
		if ($type=='_ed') return $this->_ed();
		if ($type=='__ed') return $this->__ed();

		return new ocp_tempcode();
	}

	/**
	 * The do-next manager for after content management.
	 *
	 * @param  tempcode		The title (output of get_screen_title)
	 * @param  ?ID_TEXT		The name of the page just handled (NULL: none)
	 * @param  ID_TEXT		The name of the zone just handled (blank: none/welcome-zone)
	 * @param  tempcode		The text to show (blank: default)
	 * @return tempcode		The UI
	 */
	function do_next_manager($title,$page,$zone,$completion_text)
	{
		if (!addon_installed('page_management'))
		{
			return redirect_screen($title,build_url(array('page'=>'_SELF','type'=>'misc'),'_SELF'),$completion_text);
		}

		require_code('zones2');
		require_code('zones3');
		return sitemap_do_next_manager($title,$page,$zone,$completion_text);
	}

	/**
	 * Get all pages.
	 *
	 * @param  LANGUAGE_NAME	The language we are searching for pages of
	 * @return array				The map (page name => path/time)
	 */
	function get_comcode_files_array($lang)
	{
		$zones=find_all_zones();
		$out=array();
		foreach ($zones as $zone)
		{
			$_out=array();
			if ($lang!=get_site_default_lang())
			{
				$_out+=find_all_pages($zone,'comcode_custom/'.get_site_default_lang(),'txt',false,NULL,FIND_ALL_PAGES__NEWEST);
				$_out+=find_all_pages($zone,'comcode/'.get_site_default_lang(),'txt',false,NULL,FIND_ALL_PAGES__NEWEST);
			}
			$_out+=find_all_pages($zone,'comcode_custom/'.$lang,'txt',false,NULL,FIND_ALL_PAGES__NEWEST);
			$_out+=find_all_pages($zone,'comcode/'.$lang,'txt',false,NULL,FIND_ALL_PAGES__NEWEST);

			foreach ($_out as $page=>$subdir)
			{
				if (is_integer($page)) $page=strval($page);

				$resource_owner=$GLOBALS['SITE_DB']->query_select_value_if_there('comcode_pages','p_submitter',array('the_zone'=>$zone,'the_page'=>$page));
				if (!has_edit_permission('high',get_member(),$resource_owner,'cms_comcode_pages'))
					continue;

				$out[$zone.':'.$page]=array($zone.'/pages/'.$subdir.'/'.$page,NULL);
			}
		}

		return $out;
	}

	/**
	 * Get a map of page names to paths, under the given specifications.
	 *
	 * @param  ID_TEXT		The zone we are searching in
	 * @param  PATH			The subdirectory to search for pages in
	 * @param  string			The file stub to find for
	 * @param  boolean		Whether we are doing a multi-site check on the base directory
	 * @return array			The map (page name => path/time)
	 */
	function get_comcode_revisions($zone,$subdir,$find_for,$also_checking_base=false)
	{
		$filesarray=array();
		$dir=(((substr($subdir,0,14)=='comcode_custom') && (!$also_checking_base))?get_custom_file_base():get_file_base()).'/'.filter_naughty($zone).(($zone=='')?'':'/').'pages/'.filter_naughty($subdir);
		$_dir=@glob($dir.'/'.$find_for.'*');
		if ($_dir===false) $_dir=array();
		if ((get_custom_file_base()!=get_file_base()) && (substr($subdir,0,14)=='comcode_custom') && (!$also_checking_base))
		{
			$filesarray=$this->get_comcode_revisions($zone,$subdir,$find_for,true);
		}

		// Find all the comcode pages
		if (function_exists('glob'))
		{
			foreach ($_dir as $file)
			{
				$temp=explode('.',basename($file));
				if (isset($temp[2]))
					$filesarray[$zone.':'.$file]=array($zone.'/pages/'.$subdir.'/'.basename($file),intval($temp[2]));
			}
		} else
		{
			while (false!==($file=readdir($_dir)))
			{
				if (substr($file,0,strlen($find_for)+1)==$find_for.'.')
				{
					$temp=explode('.',$file);
					if ((isset($temp[2])) && (is_numeric($temp[2])))
						$filesarray[$zone.':'.$file]=array($zone.'/pages/'.$subdir.'/'.$file,intval($temp[2]));
				}
			}

			closedir($_dir);
		}

		if (($zone=='') && (get_option('collapse_user_zones')=='1'))
			$filesarray+=$this->get_comcode_revisions('site',$subdir,$find_for,$also_checking_base);

		return $filesarray;
	}

	/**
	 * The UI to choose a page to edit.
	 *
	 * @return tempcode		The UI
	 */
	function ed()
	{
		$lang=choose_language($this->title,true);
		if (is_object($lang)) return $lang;

		require_code('form_templates');

		$fields=new ocp_tempcode();
		$add_new_permission=has_add_comcode_page_permission();
		if ($add_new_permission)
		{
			$fields->attach(form_input_line(do_lang_tempcode('PAGE'),do_lang_tempcode('DESCRIPTION_NEW_COMCODE_PAGE'),'page_link_2','',true));
			$submit_name=do_lang_tempcode('ADD');
		} else
		{
			$submit_name=NULL;
		}

		$hidden=new ocp_tempcode();
		$hidden->attach(form_input_hidden('lang',$lang));
		$hidden->attach(form_input_hidden('type','_ed'));
		$hidden->attach(build_keep_form_fields('_SELF'));

		$map=array('page'=>'_SELF','type'=>'_ed','lang'=>$lang);
		$post_url=build_url($map,'_SELF',NULL,false,true);

		$search_url=build_url(array('page'=>'search','id'=>'comcode_pages'),get_module_zone('search'));
		$sitemap_zone=get_page_zone('sitemap',false);
		if ($sitemap_zone!==NULL)
		{
			$archive_url=build_url(array('page'=>'sitemap'),$sitemap_zone);
		} else
		{
			$archive_url=build_url(array('page'=>''),'');
		}
		$text=paragraph(do_lang_tempcode('CHOOSE_EDIT_TABLE_EXTRA_COMCODE_PAGES',escape_html($search_url->evaluate()),escape_html($archive_url->evaluate())));

		require_code('templates_results_table');

		$current_ordering=get_param('sort','page_title ASC');
		if (strpos($current_ordering,' ')===false) warn_exit(do_lang_tempcode('INTERNAL_ERROR'));
		list($sortable,$sort_order)=explode(' ',$current_ordering,2);
		$sortables=array(
			'page_title'=>do_lang_tempcode('TITLE'),
			'page'=>do_lang_tempcode('PAGE'),
			'zone_name'=>do_lang_tempcode('ZONE'),
			'page_link'=>do_lang_tempcode('PAGE_LINK'),
		);
		if (((strtoupper($sort_order)!='ASC') && (strtoupper($sort_order)!='DESC')) || (!array_key_exists($sortable,$sortables)))
			log_hack_attack_and_exit('ORDERBY_HACK');

		$header_row=results_field_title(array(
			do_lang_tempcode('TITLE'),
			do_lang_tempcode('ZONE'),
			do_lang_tempcode('PAGE'),
			do_lang_tempcode('PAGE_LINK'),
			//do_lang_tempcode('PARENT_PAGE'),
			//do_lang_tempcode('OWNER'),
			//do_lang_tempcode('ADDED'),
			//do_lang_tempcode('VALIDATED'),
			do_lang_tempcode('ACTIONS'),
		),$sortables,'sort',$sortable.' '.$sort_order);

		$all_zones=find_all_zones(false,true);

		$number_pages_parsed_for_titles=0;

		$GLOBALS['NO_QUERY_LIMIT']=true;

		$start=get_param_integer('start',0);
		$max=get_param_integer('max',50);

		$filesarray=$this->get_comcode_files_array($lang);
		if (count($filesarray)>=300) // Oh dear, limits reached, try another tact
		{
			$orderer='p_add_date ASC';
			switch ($sortable)
			{
				case 'page_title':
					$orderer='t.text_original '.$sort_order;
					break;
				case 'page':
					$orderer='c.the_page '.$sort_order;
					break;
				case 'zone_name':
					$orderer='c.the_zone '.$sort_order;
					break;
				case 'page_link':
					$orderer='c.the_zone '.$sort_order.',c.the_page '.$sort_order;
					break;
			}
			$group_by='';
			if (can_arbitrary_groupby())
				$group_by='GROUP BY c.the_zone,c.the_page';

			$where_map='('.db_string_equal_to('language',$lang).' OR language IS NULL)';
			if (!has_some_edit_comcode_page_permission(COMCODE_EDIT_ANY))
			{
				if (!has_some_edit_comcode_page_permission(COMCODE_EDIT_OWN)) // Nothing global, so go per-zone
				{
					$zone_editability=get_comcode_page_editability_per_zone();
					if (count($zone_editability)!=0)
					{
						$where_map.=' AND (';
						foreach ($zone_editability as $zi=>$zone_editability_pair)
						{
							if ($zi!=0) $where_map.=' OR ';
							if (($zone_editability_pair[1] & COMCODE_EDIT_ANY) == 0)
							{
								$where_map.='('.db_string_equal_to('the_zone',$zone_editability_pair[0]).' AND submitter='.strval(get_member()).')';
							} else
							{
								$where_map.=db_string_equal_to('the_zone',$zone_editability_pair[0]);
							}
						}
						$where_map.=')';
					} else
					{
						access_denied('ADD_OR_EDIT_COMCODE_PAGES'); // Nothing at all
					}
				} else
				{
					$where_map.=' AND submitter='.strval(get_member());
				}
			} else
			{
				// No additional filter; NB: this does assume no negative overrides are in place; if they are, an error will be shown when clicking through
			}
			$ttable=get_table_prefix().'comcode_pages c LEFT JOIN '.get_table_prefix().'cached_comcode_pages a ON c.the_page=a.the_page AND c.the_zone=a.the_zone LEFT JOIN '.get_table_prefix().'translate t ON t.id=a.cc_page_title';
			$page_rows=$GLOBALS['SITE_DB']->query('SELECT c.*,cc_page_title FROM '.$ttable.' WHERE '.$where_map.$group_by.' ORDER BY '.$orderer,$max,$start);
			$max_rows=$GLOBALS['SITE_DB']->query_value_if_there('SELECT COUNT(DISTINCT c.the_zone,c.the_page) FROM '.$ttable.' WHERE '.$where_map);

			$filesarray=array();
			foreach ($page_rows as $row)
			{
				$located=_request_page($row['the_page'],$row['the_zone'],NULL,$lang);
				if ($located!==false)
				{
					$filesarray[$row['the_zone'].':'.$row['the_page']]=array(
						$row['the_zone'].'/pages/'.strtolower($located[0]).'/'.$row['the_page'],
						NULL,
						$row
					);
				}
			}

			$found_via_query=true;
		} else
		{
			$max_rows=0;
			ksort($filesarray);

			$found_via_query=false;
		}

		// Render table rows
		$_table_rows=array();
		foreach ($filesarray as $page_link=>$path_bits)
		{
			list($zone,$page)=explode(':',$page_link,2);
			if (!is_string($page)) $page=strval($page);

			if (!has_actual_page_access(get_member(),$page,$zone)) continue;

			$edit_link=build_url(array('page'=>'_SELF','type'=>'_ed','page_link'=>$page_link,'lang'=>$lang),'_SELF');

			$clone_link=build_url(array('page'=>'_SELF','type'=>'_ed','page_link'=>$zone.':','restore_from'=>$path_bits[0].'.txt','lang'=>$lang),'_SELF');

			$zone_name=array_key_exists($zone,$all_zones)?$all_zones[$zone][1]:$zone;

			// We need to separately read from DB to work out meta data?
			$row=mixed();
			if (!array_key_exists(2,$path_bits))
			{
				$rows=$GLOBALS['SITE_DB']->query_select('comcode_pages c LEFT JOIN '.get_table_prefix().'cached_comcode_pages a ON c.the_page=a.the_page AND c.the_zone=a.the_zone',array('c.*','cc_page_title'),array('c.the_zone'=>$zone,'c.the_page'=>$page),'',1);
				if ((!array_key_exists(0,$rows)) && ($number_pages_parsed_for_titles<15))
				{
					$result=request_page($page,false,$zone,'comcode_custom',true);
					$rows=$GLOBALS['SITE_DB']->query_select('comcode_pages c LEFT JOIN '.get_table_prefix().'cached_comcode_pages a ON c.the_page=a.the_page AND c.the_zone=a.the_zone',array('c.*','cc_page_title'),array('c.the_zone'=>$zone,'c.the_page'=>$page),'',1);
					$number_pages_parsed_for_titles++;
				}
				$row=array_key_exists(0,$rows)?$rows[0]:NULL;
			} else // Ah, no we got everything from DB in one go
			{
				$row=$path_bits[2];
			}

			// Work out meta data
			$page_title=new ocp_tempcode();
			if (!is_null($row))
			{
				$username=protect_from_escaping($GLOBALS['FORUM_DRIVER']->member_profile_hyperlink($row['p_submitter']));

				$parent_page=$row['p_parent_page'];
				$add_date=get_timezoned_date($row['p_add_date']);
				$validated=($row['p_validated']==1)?do_lang_tempcode('YES'):do_lang_tempcode('YES');

				if (!is_null($row['cc_page_title']))
				{
					$_page_title=get_translated_text($row['cc_page_title'],NULL,NULL,true);
					if (!is_null($_page_title))
					{
						if ($_page_title!='')
							$page_title=make_string_tempcode($_page_title);
					}
				}
			} else
			{
				$username=do_lang('UNKNOWN');
				$parent_page='';
				$add_date=get_timezoned_date(filectime(get_file_base().'/index.php'));
				$validated=do_lang_tempcode('YES');
			}

			$wrappable_page_link=preg_replace('#([^ ]):([\w\-]{10,})$#','${1}: ${2}',preg_replace('#(^[\w\-]{10,}):#','${1}: ',$page_link));

			$actions=do_template('COMCODE_PAGE_EDIT_ACTIONS',array('_GUID'=>'6cc8c492ba9ae4035c394fbe28a56c26','EDIT_URL'=>$edit_link,'CLONE_URL'=>$clone_link));

			$_table_rows[]=array(
				'page_title'=>$page_title,
				'page'=>$page,
				'zone'=>$zone,
				'zone_name'=>$zone_name,
				'page_link'=>$page_link,
				'wrappable_page_link'=>$wrappable_page_link,
				'actions'=>$actions,
			);
		}

		// Manual sorting
		sort_maps_by($_table_rows,$sortable);
		if ($sort_order=='DESC') $_table_rows=array_reverse($_table_rows);

		$table_rows=new ocp_tempcode();
		if (!$found_via_query)
		{
			$max_rows=count($_table_rows);
		}
		foreach ($_table_rows as $i=>$table_row)
		{
			if (!$found_via_query)
			{
				if ($i<$start) continue;
				if ($i>$max+$start) break;
			}

			if ($table_row['zone']=='')
			{
				$zone_hyperlink=new ocp_tempcode();
			} else
			{
				$zone_url=build_url(array('page'=>''),preg_replace('#([\w\d\_]{22})#','${1} ',$table_row['zone']));

				$zone_hyperlink=hyperlink($zone_url,$table_row['zone'],false,true,$table_row['zone_name']);
				$zone_hyperlink=do_template('COMCODE_TELETYPE',array(
					'_GUID'=>'46e1af60e09524c20fc62dd55cda1eb9',
					'CONTENT'=>$zone_hyperlink,
				));
			}

			$page_hyperlink=protect_from_escaping(do_template('COMCODE_TELETYPE',array('_GUID'=>'56e1af60e09524c20fc62dd55cda1eb9','CONTENT'=>preg_replace('#([\w\d\_]{22})#','${1} ',escape_html($table_row['page'])))));

			$table_rows->attach(results_entry(array(
				protect_from_escaping(hyperlink(build_url(array('page'=>$table_row['page']),$table_row['zone']),$table_row['page_title']->is_empty()?$page_hyperlink:$table_row['page_title'])),
				protect_from_escaping($zone_hyperlink),
				$page_hyperlink,
				protect_from_escaping(do_template('COMCODE_TELETYPE',array('_GUID'=>'bf4dbed562e189c84aa33c17d06c2791','CONTENT'=>preg_replace('#([\w\d\_]{22})#','${1} ',escape_html($table_row['wrappable_page_link']))))),
				//$parent_page,	Save space
				//$username,
				//$add_date,
				//$validated,
				protect_from_escaping($table_row['actions']),
			),true));
		}

		$table=results_table(do_lang('COMCODE_PAGES'),$start,'start',$max,'max',$max_rows,$header_row,$table_rows,$sortables,$sortable,$sort_order,'sort',NULL,NULL,NULL,8,'fdgfdfdfdggfd',true);

		$extra=$fields->is_empty()?new ocp_tempcode():do_template('FORM',array('FIELDS'=>$fields,'TEXT'=>'','URL'=>$post_url,'GET'=>true,'HIDDEN'=>'','SUBMIT_NAME'=>$submit_name,'SUBMIT_ICON'=>'menu___generic_admin__add_one'));

		// Custom fields
		require_code('fields');
		$_links=manage_custom_fields_donext_link('comcode_page');
		$links=array();
		foreach ($_links as $_link)
		{
			$links[]=array(
				'LINK_IMAGE'=>find_theme_image($_link[0]),
				'LINK_URL'=>build_url(array('page'=>$_link[1][0])+$_link[1][1],$_link[1][2]),
				'LINK_TEXT'=>$_link[2],
			);
		}

		$tpl=do_template('COMCODE_PAGE_MANAGE_SCREEN',array(
			'TITLE'=>$this->title,
			'TEXT'=>$text,
			'TABLE'=>$table,
			'FIELDS'=>$fields,
			'POST_URL'=>$post_url,
			'GET'=>true,
			'HIDDEN'=>$hidden,
			'SUBMIT_NAME'=>$submit_name,
			'LINKS'=>$links,
			'SUB_TITLE'=>$fields->is_empty()?new ocp_tempcode():do_lang_tempcode('COMCODE_PAGE_ADD'),
			'EXTRA'=>$extra,
		));

		require_code('templates_internalise_screen');
		return internalise_own_screen($tpl);
	}

	/**
	 * Find the filebase-relative path of a Comcode page. Allows override via restore_from parameter.
	 *
	 * @param  LANGUAGE_NAME	The language most preferable
	 * @param  ID_TEXT			The page name
	 * @param  ID_TEXT			The zone
	 * @return PATH				The path
	 */
	function find_comcode_page($lang,$file,$zone)
	{
		$restore_from=zone_black_magic_filterer(filter_naughty(get_param('restore_from',$zone.'/'.'pages/comcode_custom/'.$lang.'/'.$file.'.txt')),true);
		if (((!file_exists(get_file_base().'/'.$restore_from)) && (!file_exists(get_custom_file_base().'/'.$restore_from))) || ((!is_null(get_param('restore_from',NULL))) && (!$GLOBALS['FORUM_DRIVER']->is_staff(get_member()))))
			$restore_from=zone_black_magic_filterer($zone.'/'.'pages/comcode/'.$lang.'/'.$file.'.txt',true);
		if ((!file_exists(get_file_base().'/'.$restore_from)) && (!file_exists(get_custom_file_base().'/'.$restore_from)))
			$restore_from=zone_black_magic_filterer($zone.'/'.'pages/comcode_custom/'.fallback_lang().'/'.$file.'.txt',true);
		if ((!file_exists(get_file_base().'/'.$restore_from)) && (!file_exists(get_custom_file_base().'/'.$restore_from)))
			$restore_from=zone_black_magic_filterer($zone.'/'.'pages/comcode/'.fallback_lang().'/'.$file.'.txt',true);

		return $restore_from;
	}

	/**
	 * The UI to edit a page.
	 *
	 * @return tempcode		The UI
	 */
	function _ed()
	{
		require_code('form_templates');

		$page_link=$this->page_link;
		$zone=$this->zone;
		$file=$this->file;

		if (($zone!='') && (!file_exists(get_file_base().'/'.$zone.'/pages'))) warn_exit(do_lang_tempcode('NO_SUCH_ZONE'));

		require_code('type_validation');
		if (!is_alphanumeric($file,true)) warn_exit(do_lang_tempcode('BAD_CODENAME'));

		$lang=choose_language(get_screen_title(($file=='')?'COMCODE_PAGE_ADD':'COMCODE_PAGE_EDIT'),true);
		if (is_object($lang)) return $lang;

		$resource_owner=$GLOBALS['SITE_DB']->query_select_value_if_there('comcode_pages','p_submitter',array('the_zone'=>$zone,'the_page'=>$file));
		if (is_null($resource_owner)) // Add
		{
			if (!has_add_comcode_page_permission($zone))
				access_denied('ADD_COMCODE_PAGE');
		} else // Edit
		{
			if (!has_edit_comcode_page_permission($zone,$file,$resource_owner))
				access_denied('EDIT_COMCODE_PAGE');
		}

		$restore_from=$this->find_comcode_page($lang,$file,$zone);

		// Check no redirects in our way
		if (addon_installed('redirects_editor'))
		{
			$test=$GLOBALS['SITE_DB']->query_select_value_if_there('redirects','r_to_zone',array('r_from_page'=>$file,'r_from_zone'=>$zone));
			if (!is_null($test))
			{
				$redirect_url=build_url(array('page'=>'admin_redirects'),get_module_zone('admin_redirects'));
				attach_message(do_lang_tempcode('BLOCKING_REDIRECT_IN_PLACE',escape_html($redirect_url->evaluate())),'notice');
			}
		}

		if ($file=='') url_default_parameters__enable();

		if ($file!='')
		{
			require_code('zones2');
			check_page_name($zone,$file);
		}

		// Default file contents
		$contents=post_param('new','');
		$parsed=NULL;
		if ($contents=='')
		{
			$file_base=strpos($restore_from,'comcode_custom/')?get_custom_file_base():get_file_base();
			if (!file_exists($file_base.'/'.$restore_from))
				$file_base=get_file_base();
			if (file_exists($file_base.'/'.$restore_from))
			{
				$tmp=fopen($file_base.'/'.$restore_from,'rb');
				@flock($tmp,LOCK_SH);
				$contents=file_get_contents($file_base.'/'.$restore_from);
				@flock($tmp,LOCK_UN);
				fclose($tmp);
				if (is_null(get_param('restore_from',NULL)))
				{
					$string_index=$GLOBALS['SITE_DB']->query_select_value_if_there('cached_comcode_pages','string_index',array('the_zone'=>$zone,'the_page'=>$file));
					if (!is_null($string_index)) $parsed=get_translated_tempcode($string_index,NULL,$lang);
				}

				$new=false;
			} else
			{
				$contents='[title]'.do_lang('PAGE_DEFAULT_TITLE')."[/title]\n\n".do_lang('PAGE_DEFAULT_TEXT');

				$new=true;
			}

			if (($new) && (get_option('is_on_comcode_page_children')=='1') && (has_privilege(get_member(),'comcode_dangerous')))
			{
				$contents.="\n\n".'[block]main_comcode_page_children[/block]';
			}

			// Pre-process default pages with Tempcode, to make easier to understand
			if ((strpos($restore_from,'/comcode/')!==false) && (($file=='start') || ($file=='panel_left') || ($file=='panel_right')))
			{
				require_code('tempcode_compiler');
				$contents=template_to_tempcode($contents);
				$contents=$contents->evaluate();
			}
		} else
		{
			$new=false;
		}

		// Actualiser URL
		$post_url=build_url(array('page'=>'_SELF','type'=>'__ed'),'_SELF');

		// Revision history
		$filesarray=$this->get_comcode_revisions($zone,'comcode_custom/'.$lang,$file.'.txt');
		rsort($filesarray);
		$i=0;
		$revision_history=new ocp_tempcode();
		$max=intval(get_option('number_revisions_show'));
		$last_path=$file_base.'/'.$restore_from;
		if (file_exists($last_path))
		{
			foreach ($filesarray as $iterator=>$stuff)
			{
				list($filepath,$time)=$stuff;

				// Find who did the revision
				$editor=$GLOBALS['SITE_DB']->query_select_value_if_there('adminlogs','member_id',array('date_and_time'=>$time,'the_type'=>'COMCODE_PAGE_EDIT','param_a'=>$file));
				if ((has_privilege(get_member(),'view_revision_history')) || ($editor==get_member()))
				{
					if (is_null($editor))
					{
						$editor=do_lang('UNKNOWN');
					}
					else
					{
						$editor=$GLOBALS['FORUM_DRIVER']->get_username($editor);
						if (is_null($editor)) $editor=do_lang('UNKNOWN');
					}
					$old_file=(strpos($filepath,'_custom/')?get_custom_file_base():get_file_base()).'/'.$filepath;
					$size=filesize($old_file);
					$date=get_timezoned_date($time);
					$url=get_custom_base_url().'/'.$zone.'/'.'pages/comcode_custom/'.$lang.'/'.$file.'.txt.'.strval($time);
					$restore_url=build_url(array('page'=>'_SELF','type'=>'_ed','page_link'=>$zone.':'.$file,'restore_from'=>zone_black_magic_filterer($zone.(($zone!='')?'/':'').'pages/comcode_custom/'.$lang.'/'.$file.'.txt.'.strval($time),true)),'_SELF');
					require_code('diff');
					if (function_exists('diff_simple'))
					{
						$rendered_diff=diff_simple($old_file,$last_path);
						$last_path=$old_file;
						if (($rendered_diff=='') && ($iterator==0)) continue; // the version records are often saved on create not replace
						$revision_history->attach(do_template('REVISION_HISTORY_LINE',array('_GUID'=>'57e2c81fd621d1c8d6e283a5a4991001','REFERENCE_POINT_EXACT'=>true,'RENDERED_DIFF'=>$rendered_diff,'EDITOR'=>$editor,'DATE'=>$date,'DATE_RAW'=>strval($time),'RESTORE_URL'=>$restore_url,'URL'=>$url,'SIZE'=>clean_file_size($size))));
						$i++;
					}

					if ($i==$max) break;
				}
			}
			if ((strpos($restore_from,'/comcode_custom/')!==false) && (zone_black_magic_filterer($zone.'/'.'pages/comcode/'.$lang.'/'.$file.'.txt',true)!=$restore_from) && (file_exists(zone_black_magic_filterer(get_file_base().'/'.$zone.'/'.'pages/comcode/'.$lang.'/'.$file.'.txt'))))
			{
				$url=get_base_url().'/'.$zone.'/'.'pages/comcode/'.$lang.'/'.$file.'.txt';
				$size=filesize(zone_black_magic_filterer(get_file_base().'/'.$zone.'/'.'pages/comcode/'.$lang.'/'.$file.'.txt'));
				$restore_url=build_url(array('page'=>'_SELF','type'=>'_ed','page_link'=>$zone.':'.$file,'restore_from'=>$zone.(($zone=='')?'':'/').'pages/comcode/'.$lang.'/'.$file.'.txt'),'_SELF');
				require_code('diff');
				if (function_exists('diff_simple'))
				{
					$rendered_diff=diff_simple(zone_black_magic_filterer(get_file_base().'/'.$zone.'/'.'pages/comcode/'.$lang.'/'.$file.'.txt'),$last_path);
					$revision_history->attach(do_template('REVISION_HISTORY_LINE',array('_GUID'=>'ed0b29f26cf93d4d6e0348a7e75d259d','REFERENCE_POINT_EXACT'=>true,'RENDERED_DIFF'=>$rendered_diff,'RESTORE_URL'=>$restore_url,'URL'=>$url,'SIZE'=>clean_file_size($size))));
					$i++;
				}
			}
		}
		if ((!$revision_history->is_empty()) && (get_param('restore_from','')==''))
			$revision_history=do_template('REVISION_HISTORY_WRAP',array('_GUID'=>'2349ee62cae037ec3cf1766403c92b39','CONTENT'=>$revision_history));
		elseif (!$revision_history->is_empty()) $revision_history=do_template('REVISION_RESTORE');

		$meta_keywords=post_param('meta_keywords','');
		$meta_description=post_param('meta_description','');
		if (($meta_keywords=='') && ($meta_description==''))
		{
			list($meta_keywords,$meta_description)=seo_meta_get_for('comcode_page',$zone.':'.$file);
		}

		$hidden_fields=new ocp_tempcode();

		if ((addon_installed('page_management')) && (has_actual_page_access(get_member(),'adminzone')))
		{
			$delete_url=build_url(array('page'=>'admin_sitemap','type'=>'_delete','page__'.$file=>1,'zone'=>$zone),get_module_zone('admin_sitemap'));
		} else
		{
			$delete_url=new ocp_tempcode();
		}

		$fields=new ocp_tempcode();
		$fields2=new ocp_tempcode();
		if (addon_installed('page_management'))
		{
			if (has_actual_page_access(get_member(),'admin_sitemap'))
			{
				$fields->attach(form_input_codename(do_lang_tempcode('CODENAME'),do_lang_tempcode('DESCRIPTION_CODENAME'),'title',$file,true));
			}
		}
		$rows=$GLOBALS['SITE_DB']->query_select('comcode_pages',array('*'),array('the_zone'=>$zone,'the_page'=>$file));
		if (array_key_exists(0,$rows))
		{
			$validated=$rows[0]['p_validated']==1;
			$parent_page=$rows[0]['p_parent_page'];
			$show_as_edit=$rows[0]['p_show_as_edit']==1;
			$owner=$rows[0]['p_submitter'];
		} else
		{
			$validated=true;
			$parent_page=get_param('parent_page','');
			$show_as_edit=false;
			$owner=get_member();
		}
		$_pages=find_all_pages($zone,'comcode/'.$lang,'txt',false,NULL,FIND_ALL_PAGES__NEWEST);
		$_pages+=find_all_pages($zone,'comcode_custom/'.$lang,'txt',false,NULL,FIND_ALL_PAGES__NEWEST);
		$_pages+=find_all_pages($zone,'comcode/'.get_site_default_lang(),'txt',false,NULL,FIND_ALL_PAGES__NEWEST);
		$_pages+=find_all_pages($zone,'comcode_custom/'.get_site_default_lang(),'txt',false,NULL,FIND_ALL_PAGES__NEWEST);
		ksort($_pages);
		$pages=form_input_list_entry('',false,do_lang_tempcode('NA_EM'));
		foreach (array_keys($_pages) as $page)
		{
			if (!is_string($page)) $page=strval($page);
			if ($page!=$file) $pages->attach(form_input_list_entry($page,$parent_page==$page));
		}

		// Add in custom fields
		require_code('fields');
		append_form_custom_fields('comcode_page',$zone.':'.$file,$fields2,$hidden_fields);

		if (!$validated) $validated=(get_param_integer('validated',0)==1);
		if (has_bypass_validation_comcode_page_permission($zone))
		{
			if (addon_installed('unvalidated'))
				$fields2->attach(form_input_tick(do_lang_tempcode('VALIDATED'),do_lang_tempcode($GLOBALS['FORUM_DRIVER']->is_super_admin(get_member())?'DESCRIPTION_VALIDATED_SIMPLE':'DESCRIPTION_VALIDATED'),'validated',$validated));
		}

		if (!$new)
		{
			if ($delete_url->is_empty())
			{
				$fields2->attach(form_input_tick(do_lang_tempcode('DELETE'),do_lang_tempcode('DESCRIPTION_DELETE'),'delete',false));
			}
		}

		if (get_option('is_on_comcode_page_children')=='1')
		{
			$fields2->attach(form_input_list(do_lang_tempcode('PARENT_PAGE'),do_lang_tempcode('DESCRIPTION_PARENT_PAGE'),'parent_page',$pages,NULL,false,false));
		}
		$fields2->attach(form_input_tick(do_lang_tempcode('SHOW_AS_EDITED'),do_lang_tempcode('DESCRIPTION_SHOW_AS_EDITED'),'show_as_edit',$show_as_edit));

		$fields2->attach(do_template('FORM_SCREEN_FIELD_SPACER',array(
			'_GUID'=>'a42341a9a2de532cecdcfbecaff00a0f',
			'TITLE'=>do_lang_tempcode('SEO'),
			'SECTION_HIDDEN'=>true,
			'HELP'=>(get_option('show_docs')=='0')?NULL:protect_from_escaping(symbol_tempcode('URLISE_LANG',array(do_lang('TUTORIAL_ON_THIS'),get_tutorial_url('tut_seo'),'tut_seo','1')))
		)));
		$fields2->attach(form_input_line_multi(do_lang_tempcode('KEYWORDS'),do_lang_tempcode('DESCRIPTION_META_KEYWORDS'),'meta_keywords[]',array_map('trim',explode(',',preg_replace('#,+#',',',$meta_keywords))),0));
		$fields2->attach(form_input_line(do_lang_tempcode('META_DESCRIPTION'),do_lang_tempcode('DESCRIPTION_META_DESCRIPTION'),'meta_description',$meta_description,false));

		// Awards?
		if (addon_installed('awards'))
		{
			require_code('awards');
			$fields2->attach(get_award_fields('comcode_page',$zone.':'.$file));
		}

		require_code('content2');
		$fields2->attach(meta_data_get_fields('comcode_page',($page_link=='')?NULL:$page_link));

		if (addon_installed('content_reviews'))
		{
			require_code('content_reviews2');
			$fields2->attach(content_review_get_fields('comcode_page',($page_link=='')?NULL:$page_link));
		}

		require_code('permissions2');
		$fields2->attach(get_page_permissions_for_environment($zone,$file));

		$hidden_fields->attach(form_input_hidden('file',$file));
		$hidden_fields->attach(form_input_hidden('lang',$lang));
		$hidden_fields->attach(form_input_hidden('zone',$zone));
		$hidden_fields->attach(form_input_hidden('redirect',get_param('redirect','')));

		$posting_form=get_posting_form(do_lang(($file=='')?'COMCODE_PAGE_ADD':'SAVE'),($file=='')?'menu___generic_admin__add_one':'menu___generic_admin__edit_this',$contents,$post_url,$hidden_fields,$fields,do_lang_tempcode('COMCODE_PAGE'),'',$fields2,$parsed,NULL,NULL,false);

		if ($file=='') url_default_parameters__disable();

		$text=new ocp_tempcode();
		if (addon_installed('points'))
		{
			$login_url=build_url(array('page'=>'login','type'=>'misc','redirect'=>get_self_url(true,true)),get_module_zone('login'));
			$_login_url=escape_html($login_url->evaluate());
			if ((is_guest()) && ((get_forum_type()!='ocf') || (has_actual_page_access(get_member(),'join')))) $text->attach(paragraph(do_lang_tempcode('NOT_LOGGED_IN_NO_CREDIT',$_login_url)));
		}

		list($warning_details,$ping_url)=handle_conflict_resolution($page_link);

		return do_template('COMCODE_EDIT_SCREEN',array(
			'_GUID'=>'ec1d773684757f5bf6f39cf931555bf2',
			'NEW'=>$new,
			'PING_URL'=>$ping_url,
			'WARNING_DETAILS'=>$warning_details,
			'TEXT'=>$text,
			'TITLE'=>$this->title,
			'DELETE_URL'=>$delete_url,
			'ZONE'=>$zone,
			'FILE'=>$file,
			'POSTING_FORM'=>$posting_form,
			'REVISION_HISTORY'=>$revision_history,
		));
	}

	/**
	 * The actualiser to edit a Comcode page.
	 *
	 * @return tempcode		The UI
	 */
	function __ed()
	{
		// Load up settings from the environments
		$file=filter_naughty(post_param('file'));
		$lang=filter_naughty(post_param('lang'));
		$zone=filter_naughty(post_param('zone'));
		if (addon_installed('page_management'))
		{
			$new_file=filter_naughty(has_actual_page_access(get_member(),'admin_sitemap')?post_param('title',$file):$file);
		} else $new_file=filter_naughty($file);
		if ($file=='') $file=$new_file;

		require_code('type_validation');
		if (!is_alphanumeric($file,true)) warn_exit(do_lang_tempcode('BAD_CODENAME'));

		$validated=post_param_integer('validated',0);
		if (!addon_installed('unvalidated')) $validated=1;
		require_code('antispam');
		inject_action_spamcheck();
		if (!has_bypass_validation_comcode_page_permission($zone)) $validated=0;
		$parent_page=post_param('parent_page','');
		$show_as_edit=post_param_integer('show_as_edit',0);
		$text_raw=post_param('post');
		require_code('content2');
		$meta_data=actual_meta_data_get_fields('comcode_page',$zone.':'.$file,NULL,$new_file);

		// Handle attachments
		require_code('attachments2');
		if ($new_file!=$file)
		{
			$GLOBALS['SITE_DB']->query_update('attachment_refs',array('r_referer_id'=>$new_file),array('r_referer_id'=>$file,'r_referer_type'=>'comcode_page'));
		}
		$_text=do_comcode_attachments($text_raw,'comcode_page',$zone.':'.$new_file);
		$text=$_text['comcode'];

		// Some general CRUD maintenance that we don't do within the save_comcode_page function
		$resource_owner=$GLOBALS['SITE_DB']->query_select_value_if_there('comcode_pages','p_submitter',array('the_zone'=>$zone,'the_page'=>$file));
		if (is_null($resource_owner)) // Add
		{
			if (!has_add_comcode_page_permission($zone))
				access_denied('ADD_COMCODE_PAGE');

			require_code('submit');
			give_submit_points('COMCODE_PAGE_ADD');

			require_code('member_mentions');
			dispatch_member_mention_notifications('comcode_page',$zone.':'.$file,$resource_owner);
		} else // Edit
		{
			if (!has_edit_comcode_page_permission($zone,$file,$resource_owner))
				access_denied('EDIT_COMCODE_PAGE');

			require_code('submit');
			$just_validated=(!content_validated('comcode_page',$zone.':'.$file)) && ($validated==1);
			if ($just_validated)
			{
				send_content_validated_notification('comcode_page',$zone.':'.$file);
			}
		}
		require_code('permissions2');
		set_page_permissions_from_environment($zone,$file);
		require_code('autosave');
		clear_ocp_autosave();
		if (addon_installed('awards'))
		{
			require_code('awards');
			handle_award_setting('comcode_page',$zone.':'.$new_file);
		}
		if (addon_installed('content_reviews'))
		{
			require_code('content_reviews2');
			content_review_set('comcode_page',$zone.':'.$new_file,$zone.':'.$file);
		}

		// Main save function
		require_code('zones3');
		$path=save_comcode_page($zone,$new_file,$lang,$text,$validated,$parent_page,$meta_data['add_time'],$meta_data['edit_time'],$show_as_edit,$meta_data['submitter'],$file,post_param('meta_keywords',''),post_param('meta_description',''));

		// Deleting?
		if (post_param_integer('delete',0)==1)
		{
			check_delete_permission('high',$resource_owner);
			unlink(get_custom_file_base().'/'.$path);
			sync_file($path);

			// Delete custom fields
			require_code('fields');
			delete_form_custom_fields('comcode_page',$zone.':'.$file);
		} else
		{
			// Save custom fields
			require_code('fields');
			save_form_custom_fields('comcode_page',$zone.':'.$new_file,$zone.':'.$file);
		}

		// Look for bad title semantics
		$_text['html']=$_text['tempcode']->evaluate();
		if ((substr($file,0,1)!='_') && (substr($file,0,6)!='panel_') && (trim($_text['html'])!=''))
		{
			if ((strpos($_text['html'],'<h1')===false) && (strpos($_text['comcode'],'[title]')===false) && (strpos($_text['comcode'],'[title="1"]')===false))
			{
				attach_message(do_lang_tempcode('NO_LEVEL_1_HEADERS'),'notice');
			}
			$matches=array();
			if ((strpos($_text['html'],'<h2')===false) && (preg_match_all('#\n\[(b|font|size)\][^\.]+\[/(b|font|size)\]\n#',$_text['comcode'],$matches)>=2))
			{
				attach_message(do_lang_tempcode('NO_LEVEL_2_HEADERS'),'inform');
			}
		}

		// Messaging to user
		if ($validated==0)
		{
			require_code('submit');
			$edit_url=build_url(array('page'=>'_SELF','type'=>'_ed','page_link'=>$zone.':'.$new_file),'_SELF',NULL,false,false,true);
			if (addon_installed('unvalidated'))
				send_validation_request('COMCODE_PAGE_EDIT','comcode_pages',true,$zone.':'.$new_file,$edit_url);
		}
		$completion_text=($validated==0)?do_lang_tempcode('SUBMIT_UNVALIDATED'):do_lang_tempcode('SUCCESS');
		$url=post_param('redirect','');
		if ($url!='')
		{
			return redirect_screen($this->title,$url,$completion_text);
		}
		return $this->do_next_manager($this->title,$file,$zone,$completion_text);
	}
}


