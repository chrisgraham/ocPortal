[title sub="For ocPortal version 9.0"]ocPortal Code Book[/title]

[surround="spaced_list"]
&laquo; Return to [page="_SEARCH:codebook"]Code Book table of contents[/page]

[contents][/contents]

[title="2"]Troubleshooting[/title]

There are a number of issues developers face when programming for ocPortal. Our high standards and development mode means issues are raised to the surface that less skilled programmers may not easily notice when working with other systems.

[title="3"]XHTML[/title]

Not many developers realise that the XHTML doctype does not tell web browsers to render a page as XHTML. The doctype serves two purposes:
 - It specifies what rules the document should validate with (browsers do not do validation at all, so this is a non-issue from the rendering perspective)
 - It tells browsers to not render in "quirks mode". This is a fudge invented by Microsoft and Netscape programmers, and is nothing to do with XHTML -- it is to do with enabling correct CSS.

XHTML rendering is in-fact enabled via a mime-type. In development mode, ocPortal turns on the XHTML mime type, which means sloppy non-XHTML practices will not work. Many developers are surprised by some of the restrictions this brings up as they thought they were already good XHTML developers and understood how to work with XHTML -- when the reality is they had always been developing for HTML renderers in the past. If you are one of these developers it is important you learn how XHTML really works.

The two biggest restrictions added by XHTML are as follows:
 - Basic XHTML errors like writing "&" instead of "&amp;" will cause the browser to not be able to render the page fully. In Firefox this is worst, as the whole page will fail to render at all.
 - You cannot use [tt].innerHTML[/tt] and some other Javascript properties. Instead you will need to use the [tt]set_inner_html[/tt] and [tt]get_inner_html[/tt] functions that ocPortal supplies to get around this issue. Our functions have been carefully tuned over the years to work on all browsers, but they correctly work in XML rather than by fiddling with an HTML "byte-dump". Some Javascript libraries use [tt].innerHTML[/tt] a lot, so if you use them with ocPortal and want development mode to work (or want to write XHTML correctly in general) then you'll need to alter them a bit.

If you are seeing an XHTML error because ocPortal has died with some kind of error and it couldn't output fully correct XHTML in the process, you'll want to be able to see the error, but Firefox makes it hard due to it's total failure to render invalid XHTML. You can either look at the XHTML source, or here is a good quick tip:
 - Install this Firefox extension: https://addons.mozilla.org/en-US/firefox/addon/8207
 - If you see an error go to the View menu, the View As submenu, and choose "Web page".
 - You will see the page will re-load (the extension has forced the HTML renderer to be enabled for that page view).

ocPortal tries very hard to output nice errors without ugly XHTML errors, but the following known situations cannot be handled due to limits in PHP:
 - The PHP time limit being exceeded (and development mode intentionally imposes a 10 second time limit). It is possible if you load a page with lots of iframes that the iframes could show XHTML errors due to overall server load being high due to simultaneous stress. Then when you look at the iframe source you see no error because it reloads outside of a stress situation.
 - See also the 'blank pages' section below, as blank pages will result in XHTML errors.

[title="3"]MySQL errors[/title]

ocPortal is not just built for MySQL. It is designed to work with any kind of database software. It is all to common for developers to assume specifics of the MySQL platform are standard SQL and can be used freely. MySQL in fact is very non-standard in certain ways. ocPortal enables "MySQL strict mode" to force MySQL to (correctly) complain when mistakes (such as non-specified field values) are made.

If is advisable for you to:
 - code SQL conservatively and not try use things ocPortal does not already use
 - avoid being sloppy and getting MySQL to perform automatic type conversions and to automatically guess missing values during insert queries.

[title="3"]Tempcode[/title]

A common mistake is to use Tempcode objects as strings. These are not strings, and can't be used as strings unless you do something like [tt]$string=$tempcode->evaluate();[/tt] to get the string equivalent first. We can't rely on PHP 5's [tt]__toString[/tt] functionality in ocPortal unfortunately (and we don't want to actually, because that makes the code a bit harder to analyse).

[title="3"]Blank pages[/title]

If you find you are getting a blank page it is likely because you either have exceeded the PHP memory limit, or a PHP parse error has happened.

You can often find out what the error was by putting [tt]&keep_show_parse_errors=1[/tt] into the URL. This will make ocPortal run slower and it might introduce some weirdness, but it often will also reveal the errors. Additionally, enabling the PHP [tt]display_errors[/tt] and [tt]display_startup_errors[/tt] in your main [tt]php.ini[/tt] is a good idea (for a development server only).

Sometimes this advice will not help: if there is an "@" (error suppression operator) somewhere above the function call chain for where a fatal error happened then this will make fatal errors result in a silent blank screen. ocPortal cannot detect them. You should use "@" sparingly anyway.

[title="3"]Query limits[/title]

If you get errors about query limits consider optimising your code to use less queries. If you cannot do this, you can set:
[code="PHP"]
$GLOBALS['NO_QUERY_LIMIT']=true;
[/code]
in your code.

You can also put [tt]&keep_no_query_limit=1[/tt] into the URL to have query limits temporarily disabled. Often when caching is disabled or empty the query limit can be exceeded.

[title="3"]Debugging[/title]

If development mode is running then the [tt]inspect[/tt] function will be available in PHP. You can run commands like:
[code="PHP"]
inspect($a,$b,$c);
[/code]
and ocPortal will output the contents of these variables very neatly for you, and give a stack trace.

If output has already started then ocPortal will give you your details in an info box at the bottom of the rendered screen; otherwise you'll get a text dump.

This is very useful when stepping through code. Often bugs are because you are using the wrong data types (e.g. Tempcode objects being treated as strings). Temporarily placing inspect calls in your code and moving them along as you analyse exactly what is happening is a good way to test exactly what is happening for the occasions when the automatic stack dumps are not available or do not reveal the real cause of the problem.

If you have an IDE with a debugger then this is better, but we find most developers do not have one, and also PHP debuggers tend to be quite unreliable. This old fashioned manual technique of manually tracing through code works well if you are quick at making changes and refreshing the browser window.

[title="2"]Tips[/title]

[title="3"]Form fields[/title]

To save time and auto-populate form fields during testing, if you have the Web developers toolbar extension for Firefox, you can right click, then choose: Web Developer --> Forms --> Populate form fields.

[title="3"]Debugging CSS[/title]

Use the Firefox Firebug extension's 'Inspect' tool, or an equivalent utility in your web browser of choice. It will save you a lot of time.

[title="3"]Debugging Javascript[/title]

Use the Firefox Firebug extension's Javascript breakpoint facility, or an equivalent utility in your web browser of choice. It will save you a lot of time.

[title="2"]Advanced deployment and customisation[/title]

[title="3"]Hidden features inside ocPortal[/title]

ocPortal contains a number of hidden 'values', 'keep' parameters, and empty file flags. These allow activation of special functionality that isn't considered important/mainstream enough to warrant user-interface space within ocPortal.

[title="3"]Empty files[/title]

The presence of the following empty files in the root directory have a special meaning to ocPortal:
 - [tt]install_ok[/tt] -- don't complain if [tt]install.php[/tt] is left present (DO NOT use this unless your install is not connected to the Internet or if you definitely have an install_locked file)
 - [tt]install_locked[/tt] -- whether to lock the installer (prevent it running)
 - [tt]old_mysql[/tt] -- degrade mySQL functionality so that old (official unsupported) versions will basically work with ocPortal

[title="3"]Hidden 'values'[/title]

Values are like hidden configuration options. They are either hidden because they are managed by code (perhaps used for keeping track of something), or because they are obscure. To set a value, open up OcCLE (under the 'tools' section in the Admin Zone or clicking the symbol at the bottom-left of any page) and type [tt]:set_value('<name>','1');[/tt] (replace '1' if appropriate, but usually we do use '1' to enable). In normal PHP code, you can use the same [tt]set_value[/tt] function, and also the [tt]get_value[/tt] function. You can automatically add a new hidden value just by setting it for the first time.

The values you might want to manually change are:
 - [tt]disable_animations[/tt] -- set this to '1' if you do not want animations in the UI.
 - [tt]breadcrumb_crop_length[/tt] -- set this to the maximum number of characters to include in a breadcrumb segment.
 - [tt]seq_post_ids[/tt] -- set this to '1' if you want to make the post ID numbers shown on topics sequential rather than refer to the true ID of the post in the database (those IDs are forum-wide).
 - [tt]disable_staff_notes[/tt] -- set this to '1' if you want to no longer have 'staff notes' options on forms.
 - [tt]disable_seo[/tt] -- set this to '1' if you want to handle content SEO automatically and not ever show for fields for it. Set this to '2' if you want to handle it automatically on add, but allow fine tuning on edit.
 - [tt]max_forum_detail[/tt] -- set this to the number of forums, before which sub-subforums will not show. Default is 100.
 - [tt]max_forum_inspect[/tt] -- set this to the number of forums that will be shown as subforums, or inspected for unread topics. Default is 300.
 - [tt]force_local_temp_dir[/tt] -- set this to '1' if your server has a problem creating/deleting temporary files in the system directory.
 - [tt]jpeg_quality[/tt] -- set this to a desired JPEG quality level, for any JPEG thumbnails that are created. It should be a value between 0 and 100. Thumbnails are generated in the same image format as the source images; i.e. a JPEG source image would have a JPEG thumbnail.
 - [tt]simplify_privacy_options[/tt] -- set this to '1' if you want the custom profile field privacy options to be simplified/compressed a lot (less multi-dimensional, no usergroup filters).
 - [tt]disable_mark_forum_read[/tt] -- set this to '1' if you want to remove the mark-forum-read feature.
 - [tt]disable_mark_topic_unread[/tt] -- set this to '1' if you want to remove the mark-topic-unread feature.
 - [tt]disable_forum_dupe_buttons[/tt] -- set this to '1' if you want to disable the duplicated set of buttons when viewing forums and forum topics.
 - [tt]disable_pt_filtering[/tt] -- set this to '1' if you want to remove the private topic categorisation feature.
 - [tt]disable_user_online_groups[/tt] -- set this to '1' if you want to not show the usergroups that online users are in (this simplifies the display).
 - [tt]no_inline_pp_advertise[/tt] -- set this to '1' if you want to not advertise the inline-private-posts feature.
 - [tt]disable_multi_quote[/tt] -- set this to '1' if you want to disable the multi-post-quote feature.
 - [tt]disable_add_topic_btn_in_topic[/tt] -- set this to '1' if you want to disable the ability to create one topic when viewing another.
 - [tt]disable_skip_sig[/tt] -- set this to '1' if you want to disable the 'skip signature' option.
 - [tt]disable_views_sigs_option[/tt] -- set this to '1' if you want to disable the per-member 'view signatures' option.
 - [tt]disable_pt_restrict[/tt] -- set this to '1' if you want to disable the per-member "private topic restriction options".
 - [tt]disable_ecards[/tt] -- set this to '1' if you don't want ecards on galleries and still want the recommend addon on.
 - [tt]disable_csv_recommend[/tt] -- set this to '1' if you don't want the CSV upload option on the recommend-to-a-friend form.
 - [tt]disable_boolean_search[/tt] -- set this to '1' to disable an explit option to do boolean searches (which can be slow). It does not actually disable boolean searches fully, you can activate them by using [tt]+[/tt] and [tt]-[/tt] in queries; but really short keywords will fail because boolean search will work via the full-text search index, which has a character limit
 - [tt]proxy[/tt] -- set this to the hostname/IP-address of the machine acting as an HTTP proxy server. This can also be set via a server environmental variable of the same name, although you likely need to reset the whole server first (you definitely do on Windows with Apache, as it does not get into the environment until you do this).
 - [tt]proxy_port[/tt] -- set this to the port name of your HTTP proxy (if you do not set it it defaults to 8080). This can also be set via a server environmental variable of the same name (see above).
 - [tt]proxy_user/proxy_password[/tt] -- set this to the authentication user/password for your HTTP proxy (if you do not set it, no authentication will be used). This only works if 'prefer_curl' is on. This can also be set via a server environmental variable of the same name (see above).
 - [tt]minutes_between_sends[/tt] -- set this to the number of minutes between batches of newsletter sends (default is 10).
 - [tt]mails_per_send[/tt] -- set this to the number of e-mails to send out in each e-mail send batch (default is 60).
 - [tt]primary_paypal_email[/tt] -- set this to your primary PayPal email address, if you have set up PayPal to work against a secondary PayPal address instead. Without it ocPortal will fail to validate payments, causing all eCommerce to fail.
 - [tt]simplify_wysiwyg_by_permissions[/tt] -- set this to '1' if you want to show a simpler WYSIWYG editor to members with limited Comcode permissions.

We also have the following which are either unlikely to be useful, or potentially unstable or unpolished:
 - [tt]stupidity_mode[/tt] -- set to 'leet' or 'bork', for a fun April Fools-style Comcode joke (clear the Comcode cache after you're done though)
 - [tt]rebrand_name[/tt] -- if ocPortal is called something else as far as the site staff are concerned, set the name here
 - [tt]rebrand_base_url[/tt] -- to change where branding URLs go to (e.g. the stub that is used when linking to documentation), set it here
 - [tt]company_name[/tt] -- if ocPortal is being rebranded to be 'made' by another company, set the name here (this has no effect of copyright of course, but ocProducts allows this)
 - [tt]comment_forum__galleries[/tt] / [tt]comment_forum__images[/tt] / [tt]comment_forum__videos[/tt] / [tt]comment_forum__downloads[/tt] / [tt]comment_forum__calendar[/tt] / [tt]comment_forum__news[/tt] / [tt]comment_forum__iotds[/tt] / [tt]comment_forum__polls[/tt] -- override the comment forum for a particular content type
 - [tt]comment_forum__catalogues_<catalogue-name>[/tt] -- define a comment forum for a specific catalogue
 - [tt]ionic_on[/tt] -- inform the software that the IIS Ionic Rewriter plugin is installed and configured
 - [tt]unofficial_ecommerce[/tt] -- set to '1' if your forum driver contains usergroup manipulation functions (we don't support this, but wanted to be able to allow those willing to extend forum drivers to use our full eCommerce framework)
 - [tt]lots_of_data_in_*[/tt] -- set this to '1', with '*' replaced with a database table name, if you want the ocFilter mechanism to work with recursive db lookups rather than one huge flat lookup
 - [tt]textmate[/tt] -- set this to '1' if you are developing on a local machine and use the Apple Mac TextMate editor. It will cause TextMate editing links to come up in stack traces.
 - [tt]disable_iconv[/tt] -- set this to '1' if your iconv extension causes PHP to crash
 - [tt]disable_mbstring[/tt] -- set this to '1' if your mbstring extension causes PHP to crash
 - [tt]no_frames[/tt] -- set this to '1' if you do not want ocPortal to use frames at all in public screens. Set to '2' if you are very anal and don't want them in admin UI's where they are there to improve usability.
 - [tt]xhtml_strict[/tt] -- set this to '1' to do some magic to make ocPortal's output XHTML strict. This is slow and not really advisable as it will degrade the user experience if Javascript is not available (new-window links would break). You must enable 'no_frames' also
 - [tt]no_password_hashing[/tt] -- set this to '1' if you want passwords to be stored as plain-text in the database (not recommended)
 - [tt]agency_email_address[/tt] -- set this to a secondary e-mail address where you would like all error e-mails to go (the primary one being the staff address). Only set this if you are an agency and want to receive error e-mails in addition/instead of your client.
 - [tt]prefer_curl[/tt] -- set this to '1' if the server requires you to not use network sockets directly from PHP and instead use the CuRL extension (although if you need this it is likely you actually need to just configure the proxy settings instead, see further below).
 - [tt]allow_no_lang_selection[/tt] -- set this to '1' if you want members to be able to leave their language selection as 'Unset' (otherwise normally it'll copy the auto-detected language into their profile or they can change it, but it never stays as unset). This option is useful on multi-site-networks, with each site having a different language.
 - [tt]cdn[/tt] -- set this to a comma-separated list of domain name you'd like CSS and images to run from. A random name will be taken for each CSS file/image. You will want some kind of file mirroring setup across all CDN machines, such as an rsync setup or an ocPortal implementation via implementing 'sync_file'.
 - [tt]ntlm[/tt] -- set this to '1' if you want to allow automatic logins via NTLM. Note that this is not secure, so only really appropriate for low-security Windows intranets. It also does not work on all networks. If you want true NTLM support you can use the Apache module for it, or what is built into IIS -- but it'd be better to use Kerberos as NTLM is deprecated (if you can work your head around configuring it, as it's very hard, especially between Active Directory and the Apache module for it).
 - [tt]force_admin_auth[/tt] -- set this to '1' if you want any super-administrator to have to have some kind of authorisation-based login by redirecting them to http://base_url/admin_login/ which presumably you have configured to be a redirect-through that catches logins (Apache only).
 - [tt]no_base_check[/tt] -- set this to '1' if you do not want ocPortal to empty caches if the base URL gets changed (this is if the base URL is not defined, and someone accesses from something different). If you set this to '1', you also will want to disable frames (set no_frames to '1').
 - [tt]allow_php_in_templates[/tt] -- set this to '1' to enable the undocumented Tempcode 'PHP' directive, and it's short-hand syntax (written like normal PHP long-tags). This allows you to write PHP code inside templates, but please aware there are strong risks associated with this. It means that themes you install may contain PHP code, or people submitting Comcode content may put in PHP code which you could accidentally unwittingly activate when validating content (as it would be validated against your own security credentials).
 - [tt]base64_emails[/tt] -- set this to '1' if you want base64 emails to be used. These are more robust (PHP's wordwrapping, which we use to make non-base-64 emails compliant, can be buggy) but some servers do not like them or consider them very slightly more spammy.
 - [tt]disable_sunk[/tt] -- set this to '1' if you want to disable the sunk-topics feature. This improves performance a little on MySQL.
 - [tt]implicit_usergroup_sync[/tt] -- set this to '1' to enable synching of implicit usergroups (see the advanced members tutorial for more information)
 - [tt]disable_password_change_mails_for_staff[/tt] -- set this to '1' if you want staff password edits to not result in emails to users.
 - [tt]google_translate_api_key[/tt] -- set this to a google translate API key for the content translation feature to work much better.
 - [tt]real_memory_available_mb[/tt] -- set this to the number of MB GD should consider available for image generation, if PHP is lying about it's memory limit.
 - [tt]md_default_sort_order[/tt] -- set this to a sort parameter to change the member directory's default sort order.
 - [tt]disable_highlight_name[/tt] -- set this to '1' to disable the member name highlighting option.
 - [tt]poll_no_member_ip_restrict[/tt] -- set this to '1' if members should not be limited by IP address when voting in poll (i.e. more than one member can vote per household, but we can't stop people registering multiple profiles).
 - [tt]commercial_spellchecker[/tt] -- set this to '1' if you want to enable the WYSIWYG editor's spellcheck.net spellchecker.
 - [tt]disable_theme_img_buttons[/tt] -- set this to '1' if you don't like the theme image edit buttons that appear to staff when hovering the images.
 - [tt]disable_cat_cat_perms[/tt] -- set this to '1' if you want to disable catalogue category permissions.
 - [tt]no_confirm_url_spec_cats[/tt] -- set this to '1' if you don't want to have to confirm the category for a new catalogue entry when the category was specified in a URL parameter already.
 - [tt]use_true_from[/tt] -- set this to '1' if you want ocPortal to send emails 'from' the user that triggered the message, rather than the website. Usually it is set to 'from' the server to avoid problems with spam filters and uses the true sender address as the 'reply from' address. It is not recommended you turn this on, although it does aid usability if you know the recipient is not using SPF in their spam filter.
 - [tt]flow_mode_max[/tt] -- set this to the maximum number of images/videos to show in flow-mode.
 - [tt]no_individual_gallery_view[/tt] -- set this to '1' if all images/videos in a flow-mode gallery must be viewed from the flow-mode view (never individually).
 - [tt]notification_safety_testing[/tt] -- set this to '1' to enable extra checks to ensure notifications or welcome emails don't get mistargeted/over-sent.
 - [tt]no_threaded_buttons[/tt] -- set this to '1' if you don't want the buttons to switch between linear and threaded mode on the forum.
 - [tt]allow_admin_in_other_zones[/tt] -- set this to '1' if you want to allow admin and CMS modules to run in other zones (small performance cost).
 - [tt]memory_tracking[/tt] -- set this to '1' if you want error mails to go out if a non-admin uses more than 50MB of memory. The check happens during Tempcode output phase.
 - [tt]ocselect_protected_fields[/tt] -- a comma-separated list of fields ocSelect cannot work on (above the ones hard-coded as forbidden).
 - [tt]memory_limit[/tt] -- set this to a memory limit to override ocPortal's built in one (e.g. "128M"). This will make memory bugs on your server more dangerous, so use at your own risk (a memory usage problem can take down a whole server) -- although memory bugs are unlikely given that ocPortal users report if they ever see this error.
 - [tt]no_call_home[/tt] -- disable the private sharing of your website URL to the ocPortal developers when the Admin Zone front page loads.
 - [tt]alternate_search_join_type[/tt] -- set this to '1' if your database server does 'JOIN' translate table searches intractably slowly, and 'LEFT JOIN' ones fast. This is the exact opposite of the behaviour of most MySQL versions, but we think we have seen a case of this so on some MySQL servers to make catalogue searches tractable you might need to enable this.
 - [tt]catalogue_limit_cat_field_load__<cataloguename>[/tt] -- set this to '1' if you want that catalogue to not have all fields loaded on category views, an optimisation that reduces templating flexibility
 - [tt]canonical_keep_params[/tt] -- set this to a comma-separated list of keep_ parameters that should be allowed to propagate within search engines.
 - [tt]disable_sitemap_for__*[/tt] -- disable sitemap generation for a particular page (e.g. if there's too much data in it and the server can't cope, and the data isn't so important anyway)

[title="3"]Hidden 'keep' parameters[/title]

'keep' parameters are placed inside URLs in order to give ocPortal some extra information when loading a page. Their URL-presence is automatically relayed/preserved in all ocPortal links within the page. To enable a 'keep' parameter, simply append [tt]&<name>=1[/tt] to the URL (replace '1' if appropriate, but usually we do use '1' to enable). If there are no parameters in the URL and short-URLs are not enabled, use a '?' instead of a '&'.

The 'keep' parameters available are:
 - [tt]keep_cache[/tt] -- set to '1' to temporarily enable cacheing or '0' to temporarily disable. You can also use 'cache' so it works on a per-page basis, with the exception of this not affecting the template and language cacheing.
 - [tt]keep_no_dev_mode[/tt] -- set to '1' to disable development mode (which only runs if you're working out of a subversion repository anyway)
 - [tt]keep_no_ext_check[/tt] -- set to '1' to force the validator to not check dependency files
 - [tt]keep_force_htaccess[/tt] -- set to '1' to force the OCF login to go via htauth in precedence over other login methods (e.g. login cookies, sessions)
 - [tt]keep_textonly[/tt] -- set to '1' if the 'text only' stylesheet is to be used
 - [tt]keep_simplified_donext[/tt] -- set to '1' to temporarily act as if the simplified do-next option is turned on
 - [tt]keep_mobile[/tt] -- set to '1' to pretend you're using a PDA
 - [tt]keep_has_js[/tt] -- set to '1' to force ocPortal to think you have Javascript (useful if the has-JS cookie isn't saving yet you need to use a JS-based interface)
 - [tt]keep_forum_root[/tt] -- see root below; this one works for the forum and is a 'keep' parameter due to how the forum has links going all-over
 - [tt]keep_ldap_debug[/tt] -- set to '1' to forcefully show LDAP errors, when suppressing them might normally be wise due to over-sensitivity
 - [tt]keep_hide_mail_failure[/tt] -- set to '1' if you want to avoid showing e-mailing errors
 - [tt]keep_huge[/tt] -- set to '1' if you want to override the precautionary filesize check used by the JS validator
 - [tt]keep_show_query[/tt] -- set to '1' if you want the SQL query used by a search to be echoed out
 - [tt]keep_just_show_query[/tt] -- set to '1' if you want ocPortal to echo out the query as above, but then to exit before running it
 - [tt]keep_currency[/tt] -- set to an ISO currency code to tell ocPortal which currency you use
 - [tt]keep_country[/tt] -- set to an ISO country code to tell ocPortal which currency you're in
 - [tt]keep_cat_display_type[/tt] -- set to a number representing the catalogue category display-type to try out (0=entry-tables, 1=lists, 2=matrix)
 - [tt]keep_id_order[/tt] -- use this in conjunction with the admin_ocf_groups page to force a usergroup reordering based on the named DB field of your choice
 - [tt]keep_backup_instant[/tt] -- set this to '1' if the backup module should do a backup instantly, rather than in the background (useful for debugging, as you can add 'echo's to the backup code)
 - [tt]keep_backup_alien[/tt] -- set this to '1' if the backup module should only be backing up non-ocPortal files (i.e. do a backup of the website, but not the software)
 - [tt]keep_module_dangerous[/tt] -- set this to '1' to allow uninstallation of modules that are locked
 - [tt]keep_preserve_ids[/tt] -- set this to '1' when doing an OCP-merge import, to preserve ID's in the import (and not import duplicated ID's); this is not supported officially
 - [tt]keep_theme[/tt] -- set this to a theme name, to temporarily try out a different theme
 - [tt]keep_safe_mode[/tt] -- set this to '1' so that where possible, any customised files will be ignored; the default theme will be used
 - [tt]keep_fatalistic[/tt] -- set this to '1' if terminal warning errors should be handled as terminal fatal errors (which include stack traces); useful for debugging the origin of an error message
 - [tt]keep_firephp[/tt] -- set this to '1' to dump permissions checks that occurred to [url="FirePHP"]http://www.firephp.org/[/url]. It only works for authenticated administrators, but if the administrator is using '[tt]keep_su[/tt]' to masquerade as another user it will work (which is particularly useful for debugging permissions problems).
 - [tt]keep_firephp_queries[/tt] -- set this to '1' to dump queries that occurred to [url="FirePHP"]http://www.firephp.org/[/url]. It only works for authenticated administrators, but if the administrator is using '[tt]keep_su[/tt]' to masquerade as another user it will work.
 - [tt]keep_show_parse_errors[/tt] -- set this to '1' if you think you have a corrupt PHP file but you can't tell which as your PHP display errors option isn't on (and hence just get blank screens). This will allow ocPortal to generate stack traces for most corrupt files it tries to include. Note another cause of blank screens can be the PHP memory limit being exceeded.
 - [tt]keep_send_immediately[/tt] -- set this to '1' if you want to debug newsletter code, and not have newsletters sent in the background.
 - [tt]keep_su_online[/tt] -- set this to '1' if you want the user '[tt]keep_su[/tt]' is used with to also show as online, and for their last online/submit statuses to be updated.
 - [tt]keep_no_frames[/tt] -- set this to '1' if you do not want frames to be used.
 - [tt]keep_no_minify[/tt] -- set this to '1' if you want to use a Javascript debugger and hence do not want the JS to be minified (unreadable).
 - [tt]keep_show_loading[/tt] -- set this to '1' if you want comments inside the HTML source showing memory usage taken up as server-side scripts load
 - [tt]keep_no_swfupload[/tt] -- set this to '1' if you don't want the flash uploader to be used
 - [tt]keep_avoid_memory_limit[/tt] -- do not put on a memory limit in development mode
 - [tt]keep_no_query_limit[/tt] -- do not place a query limit during development mode
 - [tt]keep_on_same_msn[/tt] -- set this to '0' if you are doing an ocPortal site merge import and want to force OCF content to import even if the importer thinks that you are on the same MSN as the other site
 - [tt]keep_theme_test[/tt] -- set this to '1' if you are testing lots of themes. It will cause installed theme addons to have their Comcode pages extracted with a special prefix, it will remove that prefix on addon packaging, and page detection will give preference to the prefix for the particular theme you are currently using (so use in conjunction with keep_theme).
 - [tt]keep_debug_notifications[/tt] -- set this to '1' if you are debugging the notifications system and therefore need them to be sent before the page output finishes.

The following 'keep' parameters have interface triggers, but are also handy for manual activation:
 - [tt]keep_markers[/tt] -- set this to '1' if you want template start/end markers to be output in the page HTML source when viewed in ocPortal
 - [tt]keep_novalidate[/tt] -- set this to '1' to force page output validation to not occur
 - [tt]keep_su[/tt] -- set this to a username or member ID when logged in as admin, to pretend to be that member. May choose the guest member ('Guest' on OCF by default).
 - [tt]keep_theme_seed[/tt] -- set this to kiddie or random or a 6-character HTML colour code, to get dynamic themegen going for your page view (this is very slow, but fun!); you must be staff, with a confirmed session, for this to work
 - [tt]keep_theme_dark[/tt] -- used in conjunction with keep_theme_seed; set to '1' if it is a dark seed
 - [tt]keep_theme_source[/tt] -- used in conjunction with keep_theme_seed; set to the name of the theme being used as the source
 - [tt]keep_theme_algorithm[/tt] -- used in conjunction with keep_theme_seed; set this to 'equations' or 'hsv' to set the theme algoritm
 - [tt]keep_print[/tt] -- set this to '1' to render a 'printer friendly' version of the page
 - [tt]keep_lang[/tt] -- set to a two-letter ISO language code to tell ocPortal which language to use
 - [tt]keep_session[/tt] -- this isn't useful for manual editing, but it is used to note session-IDs when [session-]cookies are not working
 - [tt]keep_timezone[/tt] -- this is the timezone code (tz style) to view in

The following aren't 'keep' parameters, but are still useful and otherwise behave in the same way:
 - [tt]auth[/tt] -- set to '1' to make ocPortal request HTTP authentication. This is useful for RSS URLs, if you want the feeds to be generated as authenticated.
 - [tt]wide[/tt] -- set to '1' if you don't want to show side panels
 - [tt]wide_high[/tt] -- set to '1' if you don't show to show panels or the TOP/BOTTOM
 - [tt]root[/tt] -- set to a category ID for the current viewed content type to trick the breadcrumbs into showing a 'virtual root'; this can also be activated by browsing to the category you'd like to be virtual root (as staff) and then clicking on the final link in the breacrumb chain (the link representing the current category)
 - [tt]start[/tt] -- set to the start number in the result browsing
 - [tt]max[/tt] -- set to the maximum number of results to show per-page
 - [tt]page/type/id[/tt] -- I hope you know what these ones do ;)
 - [tt]kfsXX[/tt] -- this isn't useful for manual editing but people ask what it's for; it's to preserve the browse positions in forumviews, such that when returning, the browse positions are remembered

[title="3"]Extra info.php settings[/title]

Setting,
[code]
$SITE_INFO['no_email_output']='1';
[/code]
in [tt]info.php[/tt] will disable emails. This is useful on a development server running with live user accounts.

[title="3"]Hints for making websites for other people[/title]

ocPortal is a great platform for web developers. A web developer can build all kinds of sites using ocPortal -- from simple new media sites, to social networks, to seeminly-bespoke sites such as property directories.

However, if you're making a website for somebody else it is is important to bear in mind they probably do not want to learn ocPortal like you have.

Here are some hints:
 - You might want to use the 'debranding' feature in the Admin Zone (Tools section)
 - You might want to give the user a non-admin username (e.g. a super-moderator user instead), and then set Admin Zone permissions so that many unnecessary pages are hidden. ocPortal is then smart enough to automatically simplify it's interface to compensate.
 - If you have to hand code a Comcode page with HTML then include the following hint in it: [tt]{$,page hint: no_smart_conversion}[/tt]. This will stop the WYSIWYG editor trying to convert the HTML back into Comcode, which can mess up hand-crafted markup and CSS (normally WYSIWYG only guarantees to preserve style/structure created within itself).
 - If for some reason you don't want the WYSIWYG editor to run for a page (e.g. if it has a Google ad on, that can cause the editor to malfunction) then include the following hint in it: [tt]{$,page hint: no_wysiwyg}[/tt]
 - When deploying make sure to get your canonical URL right. Ask the client whether they want 'www.' in their URL or not. Set up a .htaccess file (http://seoclass.org/canonical-redirects-htaccess-and-seo) that redirects the non-canonical URL to the correct one. This will remove a lot of headaches related to duplicate cookies, bad SEO, confusion, and ocPortal error messages.
 - Always, always, test the e-mails a site gives out. It is very embarrassing if you accidentally customise your [tt]MAIL.tpl[/tt] template in a custom theme and then find e-mails are being sent out of the Admin Zone using the default theme and ocPortal logo. Always save your [tt]MAIL.tpl[/tt] in the default theme, and make sure that the default theme's 'logo/-logo' and 'logo/trimmed-logo' theme images correctly reflect your design. And, test it! If you made complex changes, test in different e-mail programs/webmail-apps.
 - Develop using a staging/developer website, and deploy to live/customer-demo after you've finished all changes. This primarily involves uploading changed files. ocPortal 4.2+ has a great tool for transferring data between ocPortal sites using XML too, if you find you are needing to sync data.
 - If there are separate frontend and backend developers, the frontend developer can do an effective mockup by coding a simple minimodule/miniblock that uses a static array of data passed directly into templates. This way the built CSS and markup is "ocPortal ready" (particularly things like the 'IMG' symbol can be used from the start). This requires the frontend developer to have basic PHP and Tempcode experience.
 - In particular, do not make theme image changes using ocPortal's theme editor, as these are really painful to sync. Make use of ocPortal's automatic theme image detection by simply saving new theme image files into appropriate directory locations; note you will need to clear the caches if you are overriding a default image.
 - Remember when uploading to a live site that you do not want to overwrite customised Comcode pages, or other files that may have since been changed. Be careful what you upload, and keep backups.
 - If you are adding new functionality and write new templates, it is best to save these into the default theme's [tt]templates_custom[/tt]/[tt]css_custom[/tt] directories, so that your functionality works on all themes. If you are overriding default theme templates/CSS, it is then that you save them into your site's theme. A similar rule applies for custom images.

It's overkill to apply the full range of ocPortal coding standards if you're writing PHP code for use on just one website. You shouldn't get into bad habits by skipping any of the conventions but some of our standards are particularly time consuming to meet, and in particular the following time savers can be applied:
 - It is better to have "hackerish" overrides (using the code rewrite facility) than to override whole files. This is because it makes upgrades easy, which is far more important than code maintenance for a one-off ocPortal project.
 - You can almost always assume the site runs one theme and thus save your new templates into the new theme. One caveat is the 'CMS' zone will need to run your theme, and also bear in mind that any files used in outgoing emails must be available from the default theme.
 - You don't need to write everything using language strings.
 - You don't need full MVC. For example, you could code in add/edit functionality straight into modules rather than via a sources file (model).
 - You can make more assumptions than you ordinarily would be able to. For example, you might be able to assume cURL is installed. It is sensible to document your assumptions though, to make sure they continue to be met, or so someone breaking them has an idea that they need to act to change your code.
 - For simple dynamic functionality you can use minimodules and miniblocks instead of full blown object-orientated modules and blocks.
 - You do not need to write PHPdoc comments unless you think other developer's would benefit from them.
 - On some sites you may be able to assume Javascript is enabled, or that accessibility isn't an issue (e.g. on a video site it's unlikely to need to cater for blind users -- unless you plan to support audio description). Generally we would advise to be very cautious here, it usually does not take much longer to support full accessibility, and is worth doing routinely. But it is worth us pointing this out because some sites may require particular complex Javascript interfaces and it might be unviable to support Javascript being disabled.

Bear in mind that some sites need maintenance or have multiple people working on them, so you should bear this in mind when you decide the level of engineered design and code documentation to implement for your custom functionality. It is a trade-off between initial development cost, and long-term time savings.

[title="3"]Overriding files[/title]

If you change an original ocPortal file for a client project you must save it into the [tt]_custom[/tt] equivalent of it's original directory. E.g. if you change [tt]site/pages/modules/calendar.php[/tt] you need to save into [tt]site/pages/modules_custom/calendar.php[/tt]. Otherwise if the client ever upgrades their website chances are all the customisations you've made would be lost when a newer version of the original file is placed.

This said, It's best to avoid completely overriding default files if possible, so that any bug fixes from upgrades are more likely to work. ocPortal provides some techniques so you can override just stuff you want to change rather than a whole file.
This is explained in the [page="docs:tut_framework"]The ocPortal programming framework[/page] tutorial (there are two techniques: replacing/supplementing, and progmattic alternation).

If you are considering overriding a file just so that you can add some new functions to it used by one of your new modules (for example, adding a new [tt]form_input_something[/tt] function), consider adding to a new file (or existing file in your module's addon) instead. There is no rule that says similar functions have to go together, and it makes no sense unless they are all core functions -- in fact it increases average memory usage to have excess functions defined in core files (each required-up function uses quite a lot of memory).

[title="2"]Conclusion[/title]

We're glad you've made it to the end of our Code Book. Thanks for reading this far, and we hope you find ocPortal an effective and enjoyable environment to code for.
[/surround]