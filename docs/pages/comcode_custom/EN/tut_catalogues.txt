[title sub="Written by Chris Graham, ocProducts"]ocPortal Tutorial: Custom structured content (via catalogues)[/title]

[exp_thumb="Adding a catalogue" float="right"]catalogues_add[/exp_thumb]
{!catalogues:DOC_CATALOGUES}
The pre-made catalogues are:
 - Links
 - FAQs
 - Modifications
 - Hosted-sites
 - Developer-projects
 - Contacts
All the pre-made catalogues may be removed in the Setup Wizard, so depending on what you chose in that wizard, they may or may not currently be on your site.

[exp_thumb="Choosing a catalogue to add an entry to" float="right"]catalogues_choose_to_add_to[/exp_thumb]
Catalogues can be used to model most things required by large websites that would otherwise have to be implemented either as new modules, or hard-coded pages. Note that catalogues are designed to store records of which there are likely more than one, not as a container for all unstructured custom information (that is what Comcode pages are for).

Catalogues are initially defined by the fields in them. 'Categories' are then made in the catalogue. Then categories are filled with 'entries'.

[contents]decimal,lower-alpha[/contents]

[title="2"]Fields[/title]

A catalogue consists of a number of fields.

[exp_thumb="Adding an entry to a catalogue" float="right"]catalogues_add_entry[/exp_thumb]
Catalogues support the following field types:
 - [tt]short_text[/tt] -- A short piece of text (less than 255 characters)
 - [tt]long_text[/tt] -- A long piece of text. The first such field will support attachments.
 - [tt]short_trans[/tt] -- A short piece of text (less than 255 characters), that supports Comcode
 - [tt]long_trans[/tt] -- A long piece of text, that supports Comcode
 - [tt]integer[/tt] -- An integer (whole number)
 - [tt]float[/tt] -- A floating point number (a number with a decimal part)
 - [tt]picture[/tt] -- An uploaded image
 - [tt]upload[/tt] -- An uploaded file
 - [tt]url[/tt] -- A URL
 - [tt]page_link[/tt] -- A page-link (i.e. in-site link)
 - [tt]email[/tt] -- An e-mail address
 - [tt]user[/tt] -- A member ID
 - [tt]list[/tt] -- A list with some predefined choices. You choose which values are in the list by encoding it into the default field value, each list value is separated by a '|' symbol
 - [tt]tick[/tt] -- A checkbox, or if the value is set as non-required, a list with 'Yes' and 'No' as selectable options
 - [tt]auto_increment[/tt] -- An auto-incremented number (i.e. each entry in the catalogue is assigned a sequential number) (this is set automatically, and not visible when adding an entry)
 - [tt]random[/tt] -- A random 10 character alphanumeric code (this is set automatically, and not visible when adding an entry)
 - [i]and more[/i]
[exp_thumb="There are a whole host of options available after catalogue activity" float="right"]catalogues_do_next[/exp_thumb]
Programmers may add new field types by writing new hook code files.
The '[tt]upload[/tt]' and '[tt]picture[/tt]' types actually allow entry submitters to upload files from their own computer.

Fields may be given default values. Sometimes these have special meanings:
 - [tt]list[/tt] -- The values in the list, separated by '|'
 - [tt]auto_increment[/tt] -- The sequence start number (if it was left blank by the submitter).
 - [tt]random[/tt] -- The length of the random string (if it was left blank by the submitter).

You may order the fields, make some invisible, make some optional, and choose which defines ordering. The first field in a catalogue is used as the title field for entries in that catalogue.

You may also specify which fields may be used to search the catalogue (searching is performed with the regular ocPortal search module).

[title="2"]Modes of display[/title]

[exp_thumb="A non-tree catalogue uses an index" float="right"]catalogues_view_index[/exp_thumb]
There are two options to set how a catalogue may display:
 - 'Own pages' -- this allows you to make it so that catalogue categories show only skeleton information on entries, encouraging users to view the entry screen for full details; typically this will be used when entries have many fields.
 - 'Is tree' -- a tree catalogue has a full hierarchical category tree, much like the download system does; a non-tree catalogue just shows the categories from a single catalogue index.

[surround]
[exp_thumb="A catalogue with 'own pages' enabled" float="left"]catalogues_own_pages[/exp_thumb]
[exp_thumb="A catalogue without 'own pages' enabled" float="left"]catalogues_not_own_pages[/exp_thumb]
[exp_thumb="Viewing a catalogue entry" float="right"]catalogues_view_entry[/exp_thumb]
[/surround]
[title="2"]Creating a tree catalogue, fast[/title]

There is a special feature on the screen to add a catalogue with a category tree constructed automatically for it.
To define the tree you just need to type in the categories you want in a special format that is very quick to write.

This is best shown by example, so here is an example for a catalogue category tree with that has categories for each of the states/provinces in the USA and Canada:
[code]
USA\Alabama|USA\Alaska|USA\Arizona|USA\Arkansas|USA\California|USA\Colorado|USA\Connecticut|USA\Delaware|USA\Florida|USA\Georgia|USA\Hawaii|USA\Idaho|USA\Illinois|USA\Indiana|USA\Iowa|USA\Kansas|USA\Kentucky|USA\Louisiana|USA\Maine|USA\Maryland|USA\Massachusetts|USA\Michigan|USA\Minnesota|USA\Mississippi|USA\Missouri|USA\Montana|USA\Nebraska|USA\Nevada|USA\New Hampshire|USA\New Jersey|USA\New Mexico|USA\New York|USA\North Carolina|USA\North Dakota|USA\Ohio|USA\Oklahoma|USA\Oregon|USA\Pennsylvania|USA\Rhode Island|USA\South Carolina|USA\South Dakota|USA\Tennessee|USA\Texas|USA\Utah|USA\Vermont|USA\Virginia|USA\Washington|USA\West Virginia|USA\Wisconsin|USA\Wyoming|Canada\Alberta|Canada\British Columbia|Canada\Manitoba|Canada\New Brunswick|Canada\Newfoundlandand Labrador|Canada\Northwest Territories|USA\Nova Scotia|USA\Ontario|USA\Prince Edward Island|Canada\Quebec|Canada\Saskatchewan|Canada\Yukon Territory
[/code]

[title="2"]Adding a catalogue[/title]

To add a catalogue (amongst other functions) go to the 'Catalogues' icon in the Content Management Zone.

[title="2"]Editing a catalogue[/title]

[exp_thumb="Editing a catalogue" float="right"]catalogues_edit[/exp_thumb]
You can edit a catalogue to change details, add, edit or remove fields.

You cannot change field data types after you have created them (except between field types that have the same "storage" type) as this would affect the integrity of any data that may have already been entered into them. A workaround is to export to CSV, delete the field, create a new field with the same name and the new type, and reimport the CSV.

[title="2"]Permissions[/title]

Like other ocPortal content types, catalogues support access permissions. However because catalogues essentially allow many different content types to be produced (each in their own catalogue), there is an extra layer of permissions available: you may set access permissions for both catalogues, and categories within them.

[title="2"]Customising the look & feel of catalogues[/title]

If you have multiple catalogues on your website and you wish for them to have customised appearances, this is possible for advanced users via one of two ways:

[title="3"]Tempcode programming[/title]

It is possibly to achieve template customisation wholely within the default set of templates, by using template programming. The catalogue name is passed into every catalogue template meaning you can use template IF directives to differentiate against that name, producing different output accordingly.

Whilst the main [tt]CATALOGUE_DEFAULT_FIELDMAP_ENTRY_WRAP.tpl[/tt] template uses the [tt]FIELDS[/tt] parameter by default (which consists of precomposited template field rows, built using the other templates), it is also given special parameters correlating to each individual field row and each individual field value. You may thus entirely customise the catalogue look using these low level values to make very customised arrangements that are more complex than the simple tabular arrangement used by default.


For example, take the [tt]CATALOGUE_DEFAULT_FIELDMAP_ENTRY_WRAP.tpl[/tt] template:
[codebox]
<div class="wide_table_wrap"><table summary="{!MAP_TABLE}" class="wide_table results_table spaced_table">
	<colgroup>
		<col class="field_name_column" />
		<col class="field_value_column" />
	</colgroup>

	<tbody>
		{FIELDS}
	</tbody>
</table></div>
[/codebox]

If we wanted to jazz a 'classifieds' catalogue up a bit, we might change it to something like:
[codebox]
<div class="wide_table_wrap"><table summary="{!MAP_TABLE}" class="wide_table results_table spaced_table">
	<colgroup>
		<col class="field_name_column" />
		<col class="field_value_column" />
	</colgroup>

	<tbody>
		{FIELDS}
	</tbody>
</table></div>

{+START,IF,{$EQ,{CATALOGUE},classifieds}}
<p>
	This advert was posted by
	<a href="{$PAGE_LINK,_SEARCH:members:view:{SUBMITTER}}">{$USERNAME*,{SUBMITTER}}</a>.<br />
	You might want to
	<a href="{$PAGE_LINK,_SEARCH:contactmember:misc:{SUBMITTER}}">email {$USERNAME*,{SUBMITTER}}</a>
	to query more about {FIELD_0*}.
</p>
{+END}
[/codebox]

You can see how you can reference individual fields in the template like [samp]{FIELD_0}[/samp].
For a full table of fields you can use, put [samp]{+START,PARAM_INFO}{+END}[/samp] temporarily into the template, and it will show you everything defined in a neat table.

[title="3"]Custom template sets[/title]

[i]For power users only[/i]

With some file system manipulation, you may make use of the 'custom template sets' feature. You then need to go to the themes/default/templates directory in ocPortal and copy all the [tt]CATALOGUE_DEFAULT_*.tpl[/tt] files to [tt]CATALOGUE_<your-catalogue-codename>_*.tpl[/tt].
You would then customise these templates.

We intentionally did not provide a highly user-friendly interface for enabling custom template sets because the process of working with multiple sets of templates is inherently difficult, and by setting it up manually you will get a better feeling for what ocPortal does.

[title="3"]Seamless catalogues[/title]

As well as customising the catalogue templates, you may also customise the language strings used by catalogues in a similar way to how custom template sets are customised.

To do this, you need to manually edit the [tt]catalogues.ini[/tt] file to add new equivalents to the [tt]DEFAULT__*[/tt] strings (where 'DEFAULT' is replaced with the codename of the catalogue that you are customising for).

You can see this has already been done for some of the default catalogues:
[codebox]
links__CATALOGUE={1}
links__CATALOGUE_INDEX=Link category index: {1}
links__CATALOGUE_CATEGORY={1}
links__CATALOGUE_ENTRY=Link: {1}
[/codebox]

If you have the language cache enabled then you will need to empty the language cache before these changes will show up.

You can also add descriptions to the add and edit screens for catalogues by creating new strings like:
[codebox]
CATALOGUE_<catalogue-name>_ADD_TEXT=Shown on add screen.
CATALOGUE_<catalogue-name>_EDIT_TEXT=Shown on edit screen.
[/codebox]

[title="3"]eCommerce catalogues[/title]

ocPortal can have special eCommerce catalogues, which integrate with the ocPortal shopping cart. These catalogues provide the following special functionality:
 - special templating for tidy product display
 - easy adding to the shopping cart
 - tax calculation
 - discounting
 - stock counting
 - view tracking

An eCommerce catalogue always assumes it has a number of special eCommerce fields as the first fields in the catalogue. The default 'product' catalogue is configured like this and thus can be used as a reference for creating more product catalogues, if desired (few users will, however, require more than one product catalogue).
If an eCommerce catalogue is not correctly configured errors will occur.
The special eCommerce fields are:
 - title
 - code
 - price_pre_tax
 - reduction_start
 - reduction_end
 - stock_level [allows blank, meaning 'not stock counted']
 - stock_level_warn_at [allows blank, meaning 'not stock counted']
 - stock_level_maintain
 - tax_type
 - weight
 - description

[title="2"]Classified ads[/title]

Catalogues are ideal for setting up a classified ads system. In fact, there is special support for this as you can program a catalogue to move entries to an archival category after a specified period of time passes. There is also a permission ('Have a longer expiry-time for catalogue entries') that allows you to grant usergroups a longer period of advert display.

This feature works by logging the date/time for each entry added. This is stored in the [tt]ce_last_moved[/tt] field in the database, under each entry. Any entry in a category that has a move target assigned will be scanned to see if the [tt]ce_last_moved[/tt] date/time is more than the configured number of move days. If it is, the entry is moved. When an entry is moved, the [tt]ce_last_moved[/tt] date/time is reset to the current time. Therefore you could, if you wished, set up chains of movements. There is no way in the ocPortal UI to change [tt]ce_last_moved[/tt] manually (it is not affected by manual moves, validation, or editing), although you could manually make changes to it in the database or you could manually move it back after it has moved and therefore the timer reset. As the movement happens in the scheduler, the [page="_SEARCH:tut_configuration"]scheduler[/page] must be enabled for it to work.

The unofficial classified ads addon overrides the functionality of [tt]ce_last_moved[/tt] and uses it to track listing times. Unlike the default functionality, this de-validates entries rather than moving them (to allow listing extensions).

[title="2"]Searching catalogues[/title]

The ocPortal search module provides special support for searching catalogues by matching against field values. You can choose which fields are searchable when you add them to the catalogue (or when you go back to edit).

[title="2"]CSV import[/title]

You can import CSV files into catalogues. Be aware this adds entries only, it doesn't try and do any merging with what is already there.





[concepts
 1_key="Catalogue"   1_value="A custom database stored within your database: define your own records, and manipulate and view them as a part of your website"
]Concepts[/concepts]

[title="2"]See also[/title]

 - [page="_SEARCH:tut_comcode_pages"]Custom pages of information (via Comcode)[/page]


